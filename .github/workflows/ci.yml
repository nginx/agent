name: CI

on:
  push:

env:
  GOLANGCI_LINT_VERSION: 'v1.49.0'
  NFPM_VERSION: 'v2.18.1'

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: Lint Agent Code
        uses: golangci/golangci-lint-action@v3
        with:
          version: "${{ env.GOLANGCI_LINT_VERSION }}"
          args: -c ./scripts/.golangci.yml
      - name: Lint SDK Code
        uses: golangci/golangci-lint-action@v3
        with:
          version: "${{ env.GOLANGCI_LINT_VERSION }}"
          working-directory: sdk
          args: -c ../scripts/.golangci.yml

  unit-test:
    name: Unit Tests
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version-file: 'go.mod'
      - name: Run Unit Tests
        run: make unit-test
      - name: Upload Test Coverage
        uses: codecov/codecov-action@v3
        with:
          files: ./build/test/coverage.out

  component-test:
    name: Component Tests
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version-file: 'go.mod'
      - name: Run Component Tests
        run: make component-test

  performance-test:
    name: Performance Tests
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Build
        uses: docker/setup-buildx-action@v2
      - name: Build Docker Image
        uses: docker/build-push-action@v3
        with:
          file: test/docker/Dockerfile
          tags: nginx-agent-benchmark:1.0.0
          context: '.'
          push: false
          load: true
          no-cache: true
          secrets: |
            "nginx-crt=${{ secrets.NGINX_CRT }}"
            "nginx-key=${{ secrets.NGINX_KEY }}"
      - name: Run Performance Tests
        run: docker run -v ${GITHUB_WORKSPACE}:/home/nginx/ --rm nginx-agent-benchmark:1.0.0

  build-snapshot:
    name: Build Snapshot
    runs-on: ubuntu-22.04
    if: ${{ !startsWith(github.ref, 'refs/heads/release-') }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v3
        with:
          go-version-file: 'go.mod'
      - name: Setup build environment
        run: |
          sudo apt-get update
          sudo apt-get install -y gpgv1 monkeysphere 
          go install github.com/goreleaser/nfpm/v2/cmd/nfpm@v2.18.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build Docker Image
        uses: docker/build-push-action@v3
        with:
          file: scripts/packages/packager/Dockerfile
          tags: build-signed-packager:1.0.0
          context: '.'
          push: false
          load: true
          no-cache: true
          build-args: |
            package_type=signed-package
      - name: Build Packages
        env:
          INDIGO_GPG_AGENT: ${{ secrets.INDIGO_GPG_AGENT }}
          NFPM_SIGNING_KEY_FILE: .key.asc
        run: |
          echo "$INDIGO_GPG_AGENT" | base64 --decode > .key.asc
          make clean package
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: nginx-agent-snapshots
          path: ./build/packages/nginx-agent.tar.gz
          retention-days: 3
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Azure Upload Snapshot
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az storage blob upload --auth-mode=login -f ./build/packages/nginx-agent.tar.gz -c ${{ secrets.AZURE_CONTAINER_NAME }} \
              --account-name ${{ secrets.AZURE_ACCOUNT_NAME }} --overwrite -n nginx-agent/${GITHUB_REF##*/}/nginx-agent.tar.gz
      - name: Azure Logout
        run: |
          az logout
        if: always()

  trigger-release-workflow:
    if: startsWith(github.ref, 'refs/heads/release-')
    needs: [ lint, unit-test, component-test, performance-test ]
    uses: ./.github/workflows/release-branch.yml
    secrets: inherit
