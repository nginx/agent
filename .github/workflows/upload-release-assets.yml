name: Release Agent

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Agent version'
        type: string
        default: ""
      uploadAzure:
        description: 'Publish packages Azure storage'
        type: boolean
        default: false
      githubRelease:
        description: 'Setup release in github'
        type: boolean
        default: false
      pkgRepo:
        description: "Source repository to pull packages from"
        type: string
        default: ""

defaults:
  run:
    shell: bash

permissions:
  contents: read

jobs:
  vars:
    name: Set workflow variables
    runs-on: ubuntu-22.04
    outputs:
      github_release: ${{steps.vars.outputs.github_release }}
      upload_azure: ${{steps.vars.outputs.upload_azure }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2
        with:
          ref: ${{ inputs.releaseBranch }}

      - name: Set variables
        id: vars
        run: |
          echo "github_release=${{ inputs.githubRelease }}" >> $GITHUB_OUTPUT
          echo "upload_azure=${{ inputs.uploadAzure }}" >> $GITHUB_OUTPUT
          cat $GITHUB_OUTPUT

  release-draft:
    name: Update Release Draft
    runs-on: ubuntu-22.04
    needs: [vars]
    permissions:
      contents: write # Needed to create draft release
    outputs:
      release_id: ${{ steps.vars.outputs.RELEASE_ID }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2
        with:
          ref: ${{ inputs.releaseBranch }}

      - name: Setup Node Environment
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2

      - name: Create Draft Release
        if: ${{ needs.vars.outputs.github_release == 'true' }}
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        id: release
        env:
          version: ${{ inputs.packageVersion }}
        with:
          script: |
            const ref = context.ref.split("/")[2]
            const {version} = process.env
            console.log(`The release version is v${version}`)

            const releases = (await github.rest.repos.listReleases({
              owner: context.payload.repository.owner.login,
              repo: context.payload.repository.name,
              per_page: 100,
            })).data

            const latest_release = (await github.rest.repos.getLatestRelease({
                owner: context.payload.repository.owner.login,
                repo: context.payload.repository.name,
            })).data.tag_name

            console.log(`The latest release was ${latest_release}`)

            if (latest_release === "v"+version) {
                core.setFailed(`A published release already exists for ${latest_release}`)
            } else {
                const draft = releases.find((r) => r.draft && r.tag_name === "v"+version)
                const draft_found = !(draft === undefined)

                let release
                if (draft_found){
                console.log("Draft release already exists. Deleting current draft release and recreating it")
                release = (await github.rest.repos.deleteRelease({
                    owner: context.payload.repository.owner.login,
                    repo: context.payload.repository.name,
                    release_id: draft.id,
                }))
                }

                const release_notes = (await github.rest.repos.generateReleaseNotes({
                    owner: context.payload.repository.owner.login,
                    repo: context.payload.repository.name,
                    tag_name: "v"+version,
                    previous_tag_name: latest_release,
                    target_commitish: ref,
                }))

                const footer = `
            ## Resources
            - Documentation -- https://github.com/nginx/agent#readme
                `

                release = (await github.rest.repos.createRelease({
                    owner: context.payload.repository.owner.login,
                    repo: context.payload.repository.name,
                    tag_name: "v"+version,
                    target_commitish: ref,
                    name: "v"+version,
                    body: release_notes.data.body + footer,
                    draft: true,
                }))

                console.log(`Release created: ${release.data.html_url}`)
                console.log(`Release ID: ${release.data.id}`)
                console.log(`Release notes: ${release_notes.data.body}`)
                console.log(`Release Upload URL: ${release.data.upload_url}`)

                return {
                    version: version,
                    release_id: release.data.id,
                    release_upload_url: release.data.upload_url,
                }
            }

      - name: Set Environment Variables
        id: vars
        run: |
          echo "RELEASE_ID=$(echo '${{steps.release.outputs.result}}' | jq -r '.release_id')" >> $GITHUB_OUTPUT
          cat $GITHUB_OUTPUT

  tag-release:
    name: Tag Release
    runs-on: ubuntu-22.04
    needs: [vars,release-draft]
    permissions:
      contents: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2
        with:
          ref: ${{ inputs.releaseBranch }}

      - name: Tag release
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email '41898282+github-actions[bot]@users.noreply.github.com'

          git tag -a "v${{ inputs.packageVersion }}" -m "CI Autogenerated"

      - name: Push Tags
        if: ${{ needs.vars.outputs.tag_release == 'true' }}
        run: |
          git push origin "v${{ inputs.packageVersion }}"

  upload-release-assets:
    name: Upload assets
    runs-on: ubuntu-22.04-amd64
    needs: [vars,release-draft,tag-release]
    permissions:
      id-token: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2
        with:
          ref: ${{ inputs.releaseBranch }}

      - name: Azure Login
        if: ${{ inputs.uploadAzure == true }}
        uses: azure/login@8c334a195cbb38e46038007b304988d888bf676a # v2.0.0
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Get Id Token
        if: ${{ inputs.publishPackages == true }}
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        id: idtoken
        with:
          script: |
            let id_token = await core.getIDToken()
            core.setOutput('id_token', id_token)

      - name: Download Packages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run:
          |
          echo "Checking Packages in ${{inputs.pkgRepo}}/nginx-agent"
          PKG_REPO=${{inputs.pkgRepo}} CERT=${{PUBTEST_CERT}} KEY=${{PUBTEST_KEY}} DL=1 scripts/packages/package_check.sh ${{version}}
          find ${{inputs.pkgRepo}}/nginx-agent | grep -e "nginx-agent[_-]${{version}}"

      - name: Azure Upload Release Packages
        if: ${{ inputs.uploadAzure == true }}
        uses: azure/CLI@965c8d7571d2231a54e321ddd07f7b10317f34d9 # v2.0.0
        with:
          inlineScript: |
            for i in $(find pkgs-test.nginx.com/nginx-agent | grep -e "nginx-agent[_-]${{version}}"); do
              echo "Uploading ${i} to nginx-agent/${GITHUB_REF##*/}/${i##*/}"
              az storage blob upload --auth-mode=login -f "$i" -c ${{ secrets.AZURE_CONTAINER_NAME }} \
              --account-name ${{ secrets.AZURE_ACCOUNT_NAME }} --overwrite -n nginx-agent/${GITHUB_REF##*/}/${i##*/}
            done

      - name: Upload Release Assets
        if: ${{ needs.vars.outputs.github_release == 'true' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        # clobber overwrites existing assets of the same name
        run: |
          gh release upload --clobber v${{ inputs.packageVersion }} \
            $(find ${{inputs.pkgRepo}}/nginx-agent | grep -e "nginx-agent[_-]${{version}}")
