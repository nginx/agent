user  nginx;
worker_processes  auto;
  
error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;
  
events {
    worker_connections  1024;
}
  
http {
    default_type  application/octet-stream;
  
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"'
                      '"$upstream_cache_status"';
  
    access_log  /var/log/nginx/access.log  main;
  
    sendfile        on;
    #tcp_nopush     on;
  
    keepalive_timeout  65;
  
    #gzip  on;
    server {
        listen 127.0.0.1:8080;
        location /api {
            api write=on;
            allow 127.0.0.1;
            deny all;
        }
    }
    server {
        listen 9091;
        return 200 "hello from http workload 1 \n";
    }
         
    server {
        listen 9092;
        return 200 "hello from http workload 2 \n";
    }
    server {
        listen 9093;
        return 200 "hello from stream workload 1 \n";
    }
    server {
        listen 9094;
        return 200 "hello from stream workload 2 \n";
    }
    upstream nginx1 {
        server 127.0.0.1:9091;
        zone my_backend1 1000000;
        keepalive 32;
        queue 10;
    }
    upstream nginx2 {
        server 127.0.0.1:9092;
        zone my_backend2 1000000;
        keepalive 32;
        queue 20;
    }
  
    server {
        #server_name www.example.com;
        status_zone my_frontend1;
        listen 127.0.0.1:8089;
        location /frontend1 {
            proxy_pass http://nginx1;
            status_zone my_location_zone1;
        }
    }
    server {
        #server_name www.example.com;
        status_zone my_frontend2;
        listen 443;
        location /frontend2 {
            proxy_pass http://nginx2;
            status_zone my_location_zone2;
       }
    }

   include /etc/nginx/conf.d/*.conf;
}
  
# TCP/UDP proxy and load balancing block
stream {
    # Example configuration for TCP load balancing
  
    upstream nginx3 {
        zone my_stream_backend1 64k;
        server 127.0.0.1:9093;
    }

    upstream nginx4 {
        zone my_stream_backend2 64k;
        server 127.0.0.1:9094;
    }

    log_format basic '$remote_addr [$time_local] '
                     '$protocol $status $bytes_sent $bytes_received '
                     '$session_time';
    access_log /var/log/nginx/access.log basic;
  
    server {
        listen 8083;
        proxy_pass nginx3;
        # NIM parser complain about status_zone, but it is allowed
        status_zone tcp_server_zone1;
    }

    server {
        listen 8084;
        proxy_pass nginx4;
        # NIM parser complain about status_zone, but it is allowed
        status_zone tcp_server_zone2;
    }
}
