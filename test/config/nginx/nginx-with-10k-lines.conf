
user root; 
worker_processes  8;
error_log  /var/log/nginx/error.log; 
pid        /var/run/nginx.pid; 

load_module /usr/lib/nginx/modules/ngx_http_headers_more_filter_module.so;
load_module /usr/lib/nginx/modules/ngx_http_naxsi_module.so; # load naxsi

events { 
    #A maximum of 1024 concurrent connections. 
    worker_connections  1024;
} 

http { 
    limit_conn_zone $binary_remote_addr zone=perip:10m;
    limit_conn_zone $server_name zone=perserver:10m;

    server_names_hash_bucket_size 64;
    server_tokens off; 
    more_set_headers 'Server: hidden';
    include       mime.types; 
    default_type  application/octet-stream; 
    access_log  testdata/configs/accesslogs/access.log; 
    client_body_temp_path /usr/local/nginx/body 1 2; 
    gzip_buffers 32 8k; 
    sendfile        on; 
    keepalive_timeout  65; 
    tcp_nodelay        on;
    #gzipping lets you serve more requests quicker. 
    gzip  on;
    #gzip_types text/html application/x-javascript application/javascript text/javascript text/css text/xml application/atom+xml application/xml;
    gzip_types application/x-javascript application/javascript text/javascript text/css text/xml application/atom+xml application/xml;

    ssl_session_cache shared:SSL:1m; # holds approx 4000 sessions
    ssl_session_timeout 1h; # 1 hour during which sessions can be re-used.
    ssl_session_tickets on;

    include location/*.conf;

# set some parameters: two levels deep for the filesystem 
# set the name of the cache to "staticfilecache", giving it a maximum cache time of 3 hours and 500meg in size. 
proxy_cache_path  /usr/local/nginx/cache  levels=1:2   keys_zone=staticfilecache:180m  max_size=500m; 
proxy_temp_path /usr/local/nginx/proxy; 
proxy_connect_timeout 30; 
proxy_read_timeout 120; 
proxy_send_timeout 120; 

#IMPORTANT - this sets the basic cache key that's used in the static file cache. 
proxy_cache_key "$scheme://$host$request_uri"; 

upstream apache-backend { 
        ip_hash;
        server 127.0.0.1:9080 fail_timeout=10s;
}

upstream k8s {
	ip_hash;
	server test.demolab.com:80 fail_timeout=10s;
	server dns.demolab.com:80 fail_timeout=10s;
}

upstream k8s-registry {
	ip_hash;
	server test.demolab.com:31005 fail_timeout=10s;
	server dns.demolab.com:31005 fail_timeout=10s;
}

upstream k8s-dashboard {
	ip_hash;
	server test.demolab.com:30443 fail_timeout=10s;
	server dns.demolab.com:30443 fail_timeout=10s;
}

upstream alarm {
	ip_hash;
	server 192.168.1.9:80 fail_timeout=10s;
}

upstream camera1 {
	ip_hash;
	server test.demolab.com fail_timeout=10s;
}
upstream camera2 {
	ip_hash;
	server test.demolab.com fail_timeout=10s;
}
upstream camera3 {
	ip_hash;
	server test.demolab.com fail_timeout=10s;
}
upstream camera4 {
	ip_hash;
	server test.demolab.com fail_timeout=10s;
}
upstream camera5 {
	ip_hash;
	server test.demolab.com fail_timeout=10s;
}

upstream rpi-octoprint {
	ip_hash;
	server test.demolab.com:80 fail_timeout=10s;
}

server {
	listen *:80 default_server deferred;
	server_name _;
	return 444;

        access_log /var/log/nginx/default-access.log combined;

        listen 0.0.0.0:443 ssl http2;
	# openssl req -x509 -nodes -days 3650 -newkey rsa:2048 -keyout /etc/nginx/ssl/nginx.key -out /etc/nginx/ssl/nginx.crt
	ssl_certificate ssl/agent2.crt;
	ssl_certificate_key ssl/agent2.key;
}

server {
        listen 0.0.0.0:443 ssl http2;
        server_name intranettest.server.com;

	ssl_certificate ssl/agent3.crt;
	ssl_certificate_key ssl/agent3.key;

	ssl_stapling on;
	ssl_stapling_verify on;
	ssl_trusted_certificate ssl/ca.crt;
	ssl_ecdh_curve auto;

	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
	ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        access_log /var/log/nginx/intranettest.server.com-access.log combined;
        error_log /var/log/nginx/intranettest.server.com-error.log;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

	location /nginx_status {

          stub_status on;
          access_log   off;
          allow 192.168.1.0/24;
          deny all;
        }

        location / {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://apache-backend;
        }

	location /camera1 {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://camera1/cgi-bin/CGIProxy.fcgi?cmd=snapPicture;
	}
	location /camera2 {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://camera2/cgi-bin/CGIProxy.fcgi?cmd=snapPicture;
	}
	location /camera3 {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://camera3/cgi-bin/CGIProxy.fcgi?cmd=snapPicture;
	}
	location /camera4 {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://camera4/cgi-bin/CGIProxy.fcgi?cmd=snapPicture;
	}
	location /camera5 {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://camera5/cgi-bin/CGIProxy.fcgi?cmd=snapPicture;
	}
	location /alarm/ {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://alarm/alarm/;
	}
}

server {

        listen 0.0.0.0:443 ssl http2;
        server_name finder.server.com;

	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
	ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        access_log /var/log/nginx/finder.server.com-access.log combined;
        error_log /var/log/nginx/finder.server.com-error.log;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;


	location ~ / {
		proxy_pass http://k8s;
	}
	ssl_certificate ssl/agent1.crt;
	ssl_certificate_key ssl/agent1.key;

	ssl_stapling on;
	ssl_stapling_verify on;
	ssl_trusted_certificate ssl/ca.crt;	

}

server {
        listen 0.0.0.0:443 ssl http2;
        server_name webmailtest.server.com;
        ssl_certificate ssl/agent1.crt;
        ssl_certificate_key ssl/agent1.key;

        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate ssl/ca.crt;	

	    ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        access_log /var/log/nginx/webmailtest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;

        proxy_set_header Host roundcube.k8stest.server.com;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
                proxy_pass http://k8s;
        }

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
}

server {
        listen 0.0.0.0:80;
        server_name admin.server.com;

        access_log /var/log/nginx/admin.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://apache-backend;
        }

    listen 443 ssl http2;
	ssl_certificate ssl/agent2.crt;
	ssl_certificate_key ssl/agent2.key;

	ssl_stapling on;
	ssl_stapling_verify on;
	ssl_trusted_certificate ssl/ca.crt;	

	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }

}

server {
        server_name postfixadmintest.server.com;

        access_log /var/log/nginx/postfixadmintest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://apache-backend;
        }

    listen 443 ssl http2;
#ssl_certificate /etc/letsencrypt/live/admin.server.com/fullchain.pem;
#ssl_certificate_key /etc/letsencrypt/live/admin.server.com/privkey.pem;

	ssl_stapling on;
	ssl_stapling_verify on;
	ssl_trusted_certificate ssl/ca.crt;

	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }

	ssl_certificate ssl/agent3.crt;
	ssl_certificate_key ssl/agent3.key;
}

server {
        server_name hometest.server.com;

        access_log /var/log/nginx/hometest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        #proxy_set_header Host openhab.k8stest.server.com;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	proxy_set_header X-Forwarded-Proto "https";
	proxy_set_header X-Forwarded-Port 443;

        location / {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;
                proxy_pass http://k8s;
        }

    listen 443 ssl http2;

	ssl_stapling on;
	ssl_stapling_verify on;

	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
	ssl_certificate ssl/agent1.crt;
	ssl_certificate_key ssl/agent1.key;
}

server {
        server_name piholetest.server.com;

        access_log /var/log/nginx/hometest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	proxy_set_header X-Forwarded-Proto "https";
	proxy_set_header X-Forwarded-Port 443;

        location / {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;
                proxy_pass http://k8s;
        }

    listen 443 ssl http2;

	ssl_stapling on;
	ssl_stapling_verify on;

	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }


	ssl_certificate ssl/agent2.crt;
	ssl_certificate_key ssl/agent2.key;
}

server {
	listen 0.0.0.0:80;
	server_name webmailtest.server.com intranettest.server.com;

	location / {
		rewrite (.*)$ https://$host$1 last;
	}
}

server {
        listen 0.0.0.0:80;
        server_name grafanatest.server.com;

        access_log /var/log/nginx/grafanatest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {


                proxy_pass http://k8s;
        }

    listen 443 ssl http2;
	ssl_certificate ssl/agent3.crt;
	ssl_certificate_key ssl/agent3.key;
    
#    include /etc/letsencrypt/options-ssl-nginx.conf;
	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate ssl/ca.crt;

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }

}

server {
        listen 0.0.0.0:80;
        server_name registrytest.server.com;

        access_log /var/log/nginx/registrytest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host registry.k8stest.server.com;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
          allow 192.168.1.0/24;
          allow 10.0.0.0/8;
          deny all;

          proxy_pass http://k8s-registry;
        }

    listen 443 ssl http2;
#    include /etc/letsencrypt/options-ssl-nginx.conf;
	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        ssl_stapling on;
        ssl_stapling_verify on;

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
	ssl_certificate ssl/agent1.crt;
	ssl_certificate_key ssl/agent1.key;
}

server {
        listen 0.0.0.0:80;
        server_name k8s-dashboardtest.server.com;

        access_log /var/log/nginx/k8s-dashboardtest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host dashboard.k8stest.server.com;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
          allow 192.168.1.0/24;
          allow 10.0.0.0/8;
          deny all;

          proxy_pass https://k8s-dashboard;
        }

    listen 443 ssl http2;
#    include /etc/letsencrypt/options-ssl-nginx.conf;
	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        ssl_stapling on;
        ssl_stapling_verify on;

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }

	ssl_certificate ssl/agent2.crt;
	ssl_certificate_key ssl/agent2.key;
}

server {
        listen 0.0.0.0:80;
        server_name prometheustest.server.com;

        access_log /var/log/nginx/prometheustest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host prometheus.k8stest.server.com;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://k8s;
        }

    listen 443 ssl http2;
	ssl_certificate ssl/agent3.crt;
	ssl_certificate_key ssl/agent3.key;
	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate ssl/ca.crt;

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }

}

server {
        server_name octoprinttest.server.com;

        access_log /var/log/nginx/octoprinttest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://rpi-octoprint;

		allow 192.168.1.0/24;
		deny all;
        }

    listen 443 ssl http2;
	ssl_certificate ssl/agent1.crt;
	ssl_certificate_key ssl/agent1.key;
    #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
	ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
	ssl_prefer_server_ciphers on;
	add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        ssl_stapling on;
        ssl_stapling_verify on;
	    ssl_trusted_certificate ssl/ca.crt;

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
}

server {
	listen 0.0.0.0:80;
	server_name mailtest.server.com;

        location ~ /(.*)$ {
                rewrite ^ http://wwwtest.server.com permanent;
        }

    listen 443 ssl http2;
	ssl_certificate ssl/agent2.crt;
	ssl_certificate_key ssl/agent2.key;
#    include /etc/letsencrypt/options-ssl-nginx.conf;

        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate ssl/ca.crt;

        ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

    # Redirect non-https traffic to https
    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
}

server {
        server_name wikitest.server.com;

        access_log /var/log/nginx/wikitest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	proxy_set_header X-Forwarded-Proto "https";
	proxy_set_header X-Forwarded-Port 443;

        location / {

                proxy_pass http://k8s;
        }

    listen 443 ssl http2;
    #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
	ssl_prefer_server_ciphers on;
	add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        ssl_stapling on;
        ssl_stapling_verify on;
	    ssl_trusted_certificate ssl/ca.crt;

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
	ssl_certificate ssl/agent3.crt;
	ssl_certificate_key ssl/agent3.key;
}

server {
        server_name homewikitest.server.com;

        access_log /var/log/nginx/homewikitest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
#        proxy_set_header Host homewiki.k8stest.server.com;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {

                proxy_pass http://k8s;
        }

    listen 443 ssl http2;
    #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
	ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
	ssl_prefer_server_ciphers on;
	add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate ssl/ca.crt;

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
	ssl_certificate ssl/agent1.crt;
	ssl_certificate_key ssl/agent1.key;
}

server {
        server_name p2ptest.server.com;
        access_log /var/log/nginx/p2p-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
                proxy_pass http://k8s;
        }

    listen 443 ssl http2;
	ssl_certificate ssl/agent2.crt;
	ssl_certificate_key ssl/agent2.key;

#    include /etc/letsencrypt/options-ssl-nginx.conf;
	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate ssl/ca.crt;

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
}

server {
        listen 0.0.0.0:80;
        server_name webmail.test.server.com;

        listen 0.0.0.0:443 ssl http2;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";
        ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;

	    ssl_protocols TLSv1.2 TLSv1.3;
        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate ssl/ca.crt;

        access_log /var/log/nginx/webmail.test.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;

        proxy_set_header Host roundcube.k8stest.server.com;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
                proxy_pass http://k8s;
        }

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }


	ssl_certificate ssl/agent3.crt;
	ssl_certificate_key ssl/agent3.key;
}

server {
        listen 0.0.0.0:80;
        server_name old-ways.test.server.com;

        listen 0.0.0.0:443 ssl http2;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;

	ssl_protocols TLSv1.2 TLSv1.3;
        ssl_stapling on;
        ssl_stapling_verify on;

        access_log /var/log/nginx/old-ways.test.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
                proxy_pass http://apache-backend;
        }

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
	ssl_certificate ssl/agent3.crt;
	ssl_certificate_key ssl/agent3.key;

}

server {
        listen 0.0.0.0:80;
        server_name mail.test.server.com;

        location ~ /(.*)$ {
                rewrite ^ http://test.server.com permanent;
        }

    listen 443 ssl http2;
    #include /etc/letsencrypt/options-ssl-nginx.conf;
    #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

    # Redirect non-https traffic to https
    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }

	ssl_certificate ssl/agent1.crt;
	ssl_certificate_key ssl/agent1.key;
}
server {
        server_name something.test.server.com;

        access_log /var/log/nginx/something.test.server.com-access.log combined;

        client_max_body_size 400m;
        client_body_timeout 3600;
        send_timeout 180;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        #Only cache 200 responses, and for a default of 20 minutes.
        proxy_cache_valid 200 20m;

        location / {
          allow 192.168.1.0/24;
          deny all;

                        # If logged in, don't cache.
                        if ($http_cookie ~* "comment_author_|wordpress_(?!test_cookie)|wp-postpass_" ) {
                                set $do_not_cache 1;
                        }

                        proxy_pass http://apache-backend;
        }

        location ~* wp\-login\.php {
          allow 192.168.1.0/24;
          deny all;

               proxy_pass http://apache-backend;
        }

        location ~* wp\-.*\.php|wp\-admin {
          allow 192.168.1.0/24;
          deny all;

                        # Don't static file cache admin-looking things.
                        proxy_pass http://apache-backend;
        }

        location ~* \.(jpg|png|gif|jpeg|js|mp3|wav|swf|mov|doc|pdf|xls|ppt|docx|pptx|xlsx)$ {
          allow 192.168.1.0/24;
          deny all;

                        proxy_pass http://apache-backend;

        }

        location = /50x.html {
          allow 192.168.1.0/24;
          deny all;

        }

        # No access to .htaccess files.
        location ~ /\.ht {
                deny all;
        }

#############################

    listen 443 ssl http2;
	ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
	ssl_prefer_server_ciphers on;
    add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";
    #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

   if ($scheme != "https") {
       return 301 https://$host$request_uri;
    }

	ssl_certificate ssl/agent2.crt;
	ssl_certificate_key ssl/agent2.key;
}

server {
        listen 0.0.0.0:80;
        server_name test.server.com;

        access_log /var/log/nginx/test.server.com-access.log combined;

        client_max_body_size 16m;
        client_body_timeout 3600;
        send_timeout 180;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        #Only cache 200 responses, and for a default of 20 minutes.
        proxy_cache_valid 200 20m;

        location / {
                        # If logged in, don't cache.
                        if ($http_cookie ~* "comment_author_|wordpress_(?!test_cookie)|wp-postpass_" ) {
                                set $do_not_cache 1;
                        }
                        proxy_cache_key "$scheme://$host$request_uri $do_not_cache";
                        proxy_cache staticfilecache;
                        proxy_pass http://apache-backend;
        }

        location ~* wp\-login\.php {
               proxy_pass http://apache-backend;
        }

        location ~* wp\-.*\.php|wp\-admin {
                        # Don't static file cache admin-looking things.
                        proxy_pass http://apache-backend;
        }

        location ~* \.(jpg|png|gif|jpeg|js|mp3|wav|swf|mov|doc|pdf|xls|ppt|docx|pptx|xlsx)$ {
                        # Cache static-looking files for 120 minutes, setting a 10 day expiry time in the HTTP header,
                        # whether logged in or not (may be too heavy-handed).
                        proxy_cache_valid 200 120m;
                        expires 864000;
                        proxy_pass http://apache-backend;
                        proxy_cache staticfilecache;
        }


        location = /50x.html {
        }

        # No access to .htaccess files.
        location ~ /\.ht {
                deny all;
        }

#############################

    listen 443 ssl http2;
#    include /etc/letsencrypt/options-ssl-nginx.conf;
	ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
	ssl_prefer_server_ciphers on;
    add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";
    #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
#    add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

#    if ($scheme != "https") {
#        return 301 https://$host$request_uri;
#    }
	ssl_certificate ssl/agent1.crt;
	ssl_certificate_key ssl/agent1.key;
}

server {
        server_name www.test.server.com;

	location / {
	    rewrite ^/(.*) $scheme://test.server.com/$1 permanent;
	}

    listen 443 ssl http2;
	ssl_certificate ssl/agent2.crt;
	ssl_certificate_key ssl/agent2.key;
    #include /etc/letsencrypt/options-ssl-nginx.conf;
    #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

}

server {
    if ($host = www.test.server.com) {
        return 301 https://$host$request_uri;
    }


        listen 0.0.0.0:80;
        server_name www.test.server.com;
    return 404;
}

server {
    if ($host = postfixadmintest.server.com) {
        return 301 https://$host$request_uri;
    }


        listen 0.0.0.0:80;
        server_name postfixadmintest.server.com;
    return 404;
}

server {
        server_name ssotest.server.com;

        access_log /var/log/nginx/ssotest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	proxy_set_header X-Forwarded-Proto https;
	proxy_set_header X-Forwarded-Port 443;

	error_page   403  /error403.html;
	location = /error403.html {
		return 200 '';
	}

        location ~ /auth/admin {
          allow 192.168.1.0/24;
          allow 10.0.0.0/8;
          deny all;
          proxy_pass http://k8s;
        }

        location / {
          proxy_pass http://k8s;
        }

    listen 443 ssl http2;

	ssl_stapling on;
	ssl_stapling_verify on;

	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }

	ssl_certificate ssl/agent3.crt;
	ssl_certificate_key ssl/agent3.key;
}



server {
    if ($host = finder.server.com) {
        return 301 https://$host$request_uri;
    }


        listen 0.0.0.0:80;
        server_name finder.server.com;
    return 404;


}}


http { 
    limit_conn_zone $binary_remote_addr zone=perip:10m;
    limit_conn_zone $server_name zone=perserver:10m;

    server_names_hash_bucket_size 64;
    server_tokens off; 
    more_set_headers 'Server: hidden';
    include       mime.types; 
    default_type  application/octet-stream; 
    access_log  testdata/configs/accesslogs/access.log; 
    client_body_temp_path /usr/local/nginx/body 1 2; 
    gzip_buffers 32 8k; 
    sendfile        on; 
    keepalive_timeout  65; 
    tcp_nodelay        on;
    #gzipping lets you serve more requests quicker. 
    gzip  on;
    #gzip_types text/html application/x-javascript application/javascript text/javascript text/css text/xml application/atom+xml application/xml;
    gzip_types application/x-javascript application/javascript text/javascript text/css text/xml application/atom+xml application/xml;

    ssl_session_cache shared:SSL:1m; # holds approx 4000 sessions
    ssl_session_timeout 1h; # 1 hour during which sessions can be re-used.
    ssl_session_tickets on;

    include location/*.conf;

# set some parameters: two levels deep for the filesystem 
# set the name of the cache to "staticfilecache", giving it a maximum cache time of 3 hours and 500meg in size. 
proxy_cache_path  /usr/local/nginx/cache  levels=1:2   keys_zone=staticfilecache:180m  max_size=500m; 
proxy_temp_path /usr/local/nginx/proxy; 
proxy_connect_timeout 30; 
proxy_read_timeout 120; 
proxy_send_timeout 120; 

#IMPORTANT - this sets the basic cache key that's used in the static file cache. 
proxy_cache_key "$scheme://$host$request_uri"; 

upstream apache-backend { 
        ip_hash;
        server 127.0.0.1:9080 fail_timeout=10s;
}

upstream k8s {
	ip_hash;
	server test.demolab.com:80 fail_timeout=10s;
	server dns.demolab.com:80 fail_timeout=10s;
}

upstream k8s-registry {
	ip_hash;
	server test.demolab.com:31005 fail_timeout=10s;
	server dns.demolab.com:31005 fail_timeout=10s;
}

upstream k8s-dashboard {
	ip_hash;
	server test.demolab.com:30443 fail_timeout=10s;
	server dns.demolab.com:30443 fail_timeout=10s;
}

upstream alarm {
	ip_hash;
	server 192.168.1.9:80 fail_timeout=10s;
}

upstream camera1 {
	ip_hash;
	server test.demolab.com fail_timeout=10s;
}
upstream camera2 {
	ip_hash;
	server test.demolab.com fail_timeout=10s;
}
upstream camera3 {
	ip_hash;
	server test.demolab.com fail_timeout=10s;
}
upstream camera4 {
	ip_hash;
	server test.demolab.com fail_timeout=10s;
}
upstream camera5 {
	ip_hash;
	server test.demolab.com fail_timeout=10s;
}

upstream rpi-octoprint {
	ip_hash;
	server test.demolab.com:80 fail_timeout=10s;
}

server {
	listen *:80 default_server deferred;
	server_name _;
	return 444;

        access_log /var/log/nginx/default-access.log combined;

        listen 0.0.0.0:443 ssl http2;
	# openssl req -x509 -nodes -days 3650 -newkey rsa:2048 -keyout /etc/nginx/ssl/nginx.key -out /etc/nginx/ssl/nginx.crt
	ssl_certificate ssl/agent2.crt;
	ssl_certificate_key ssl/agent2.key;
}

server {
        listen 0.0.0.0:443 ssl http2;
        server_name intranettest.server.com;

	ssl_certificate ssl/agent3.crt;
	ssl_certificate_key ssl/agent3.key;

	ssl_stapling on;
	ssl_stapling_verify on;
	ssl_trusted_certificate ssl/ca.crt;
	ssl_ecdh_curve auto;

	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
	ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        access_log /var/log/nginx/intranettest.server.com-access.log combined;
        error_log /var/log/nginx/intranettest.server.com-error.log;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

	location /nginx_status {

          stub_status on;
          access_log   off;
          allow 192.168.1.0/24;
          deny all;
        }

        location / {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://apache-backend;
        }

	location /camera1 {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://camera1/cgi-bin/CGIProxy.fcgi?cmd=snapPicture;
	}
	location /camera2 {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://camera2/cgi-bin/CGIProxy.fcgi?cmd=snapPicture;
	}
	location /camera3 {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://camera3/cgi-bin/CGIProxy.fcgi?cmd=snapPicture;
	}
	location /camera4 {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://camera4/cgi-bin/CGIProxy.fcgi?cmd=snapPicture;
	}
	location /camera5 {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://camera5/cgi-bin/CGIProxy.fcgi?cmd=snapPicture;
	}
	location /alarm/ {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://alarm/alarm/;
	}
}

server {

        listen 0.0.0.0:443 ssl http2;
        server_name finder.server.com;

	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
	ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        access_log /var/log/nginx/finder.server.com-access.log combined;
        error_log /var/log/nginx/finder.server.com-error.log;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;


	location ~ / {
		proxy_pass http://k8s;
	}
	ssl_certificate ssl/agent1.crt;
	ssl_certificate_key ssl/agent1.key;

	ssl_stapling on;
	ssl_stapling_verify on;
	ssl_trusted_certificate ssl/ca.crt;	

}

server {
        listen 0.0.0.0:443 ssl http2;
        server_name webmailtest.server.com;
        ssl_certificate ssl/agent1.crt;
        ssl_certificate_key ssl/agent1.key;

        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate ssl/ca.crt;	

	    ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        access_log /var/log/nginx/webmailtest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;

        proxy_set_header Host roundcube.k8stest.server.com;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
                proxy_pass http://k8s;
        }

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
}

server {
        listen 0.0.0.0:80;
        server_name admin.server.com;

        access_log /var/log/nginx/admin.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://apache-backend;
        }

    listen 443 ssl http2;
	ssl_certificate ssl/agent2.crt;
	ssl_certificate_key ssl/agent2.key;

	ssl_stapling on;
	ssl_stapling_verify on;
	ssl_trusted_certificate ssl/ca.crt;	

	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }

}

server {
        server_name postfixadmintest.server.com;

        access_log /var/log/nginx/postfixadmintest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://apache-backend;
        }

    listen 443 ssl http2;
#ssl_certificate /etc/letsencrypt/live/admin.server.com/fullchain.pem;
#ssl_certificate_key /etc/letsencrypt/live/admin.server.com/privkey.pem;

	ssl_stapling on;
	ssl_stapling_verify on;
	ssl_trusted_certificate ssl/ca.crt;

	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }

	ssl_certificate ssl/agent3.crt;
	ssl_certificate_key ssl/agent3.key;
}

server {
        server_name hometest.server.com;

        access_log /var/log/nginx/hometest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	proxy_set_header X-Forwarded-Proto "https";
	proxy_set_header X-Forwarded-Port 443;

        location / {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;
                proxy_pass http://k8s;
        }

    listen 443 ssl http2;

	ssl_stapling on;
	ssl_stapling_verify on;

	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
	ssl_certificate ssl/agent1.crt;
	ssl_certificate_key ssl/agent1.key;
}

server {
        server_name piholetest.server.com;

        access_log /var/log/nginx/hometest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	proxy_set_header X-Forwarded-Proto "https";
	proxy_set_header X-Forwarded-Port 443;

        location / {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;
                proxy_pass http://k8s;
        }

    listen 443 ssl http2;

	ssl_stapling on;
	ssl_stapling_verify on;

	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }


	ssl_certificate ssl/agent2.crt;
	ssl_certificate_key ssl/agent2.key;
}

server {
	listen 0.0.0.0:80;
	server_name webmailtest.server.com intranettest.server.com;

	location / {
		rewrite (.*)$ https://$host$1 last;
	}
}

server {
        listen 0.0.0.0:80;
        server_name grafanatest.server.com;

        access_log /var/log/nginx/grafanatest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {

                proxy_pass http://k8s;
        }

    listen 443 ssl http2;
	ssl_certificate ssl/agent3.crt;
	ssl_certificate_key ssl/agent3.key;
	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate ssl/ca.crt;

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }

}

server {
        listen 0.0.0.0:80;
        server_name registrytest.server.com;

        access_log /var/log/nginx/registrytest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host registry.k8stest.server.com;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
          allow 192.168.1.0/24;
          allow 10.0.0.0/8;
          deny all;

          proxy_pass http://k8s-registry;
        }

    listen 443 ssl http2;
#    include /etc/letsencrypt/options-ssl-nginx.conf;
	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        ssl_stapling on;
        ssl_stapling_verify on;

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
	ssl_certificate ssl/agent1.crt;
	ssl_certificate_key ssl/agent1.key;
}

server {
        listen 0.0.0.0:80;
        server_name k8s-dashboardtest.server.com;

        access_log /var/log/nginx/k8s-dashboardtest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host dashboard.k8stest.server.com;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
          allow 192.168.1.0/24;
          allow 10.0.0.0/8;
          deny all;

          proxy_pass https://k8s-dashboard;
        }

    listen 443 ssl http2;
#    include /etc/letsencrypt/options-ssl-nginx.conf;
	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        ssl_stapling on;
        ssl_stapling_verify on;

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }

	ssl_certificate ssl/agent2.crt;
	ssl_certificate_key ssl/agent2.key;
}

server {
        listen 0.0.0.0:80;
        server_name prometheustest.server.com;

        access_log /var/log/nginx/prometheustest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host prometheus.k8stest.server.com;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://k8s;
        }

    listen 443 ssl http2;
	ssl_certificate ssl/agent3.crt;
	ssl_certificate_key ssl/agent3.key;
	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate ssl/ca.crt;

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }

}

server {
        server_name octoprinttest.server.com;

        access_log /var/log/nginx/octoprinttest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://rpi-octoprint;

		allow 192.168.1.0/24;
		deny all;
        }

    listen 443 ssl http2;
	ssl_certificate ssl/agent1.crt;
	ssl_certificate_key ssl/agent1.key;
    #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
	ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
	ssl_prefer_server_ciphers on;
	add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        ssl_stapling on;
        ssl_stapling_verify on;
	    ssl_trusted_certificate ssl/ca.crt;

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
}

server {
	listen 0.0.0.0:80;
	server_name mailtest.server.com;

        location ~ /(.*)$ {
                rewrite ^ http://wwwtest.server.com permanent;
        }

    listen 443 ssl http2;
	ssl_certificate ssl/agent2.crt;
	ssl_certificate_key ssl/agent2.key;
#    include /etc/letsencrypt/options-ssl-nginx.conf;

        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate ssl/ca.crt;

        ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

    # Redirect non-https traffic to https
    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
}

server {
        server_name wikitest.server.com;

        access_log /var/log/nginx/wikitest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	proxy_set_header X-Forwarded-Proto "https";
	proxy_set_header X-Forwarded-Port 443;

        location / {

                proxy_pass http://k8s;
        }

    listen 443 ssl http2;
    #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
	ssl_prefer_server_ciphers on;
	add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        ssl_stapling on;
        ssl_stapling_verify on;
	    ssl_trusted_certificate ssl/ca.crt;

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
	ssl_certificate ssl/agent3.crt;
	ssl_certificate_key ssl/agent3.key;
}

server {
        server_name homewikitest.server.com;

        access_log /var/log/nginx/homewikitest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
#        proxy_set_header Host homewiki.k8stest.server.com;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {

                proxy_pass http://k8s;
        }

    listen 443 ssl http2;
    #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
	ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
	ssl_prefer_server_ciphers on;
	add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate ssl/ca.crt;

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
	ssl_certificate ssl/agent1.crt;
	ssl_certificate_key ssl/agent1.key;
}

server {
        server_name p2ptest.server.com;
        access_log /var/log/nginx/p2p-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
                proxy_pass http://k8s;
        }

    listen 443 ssl http2;
	ssl_certificate ssl/agent2.crt;
	ssl_certificate_key ssl/agent2.key;

#    include /etc/letsencrypt/options-ssl-nginx.conf;
	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate ssl/ca.crt;

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
}

server {
        listen 0.0.0.0:80;
        server_name webmail.test.server.com;

        listen 0.0.0.0:443 ssl http2;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";
        ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;

	    ssl_protocols TLSv1.2 TLSv1.3;
        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate ssl/ca.crt;

        access_log /var/log/nginx/webmail.test.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;

        proxy_set_header Host roundcube.k8stest.server.com;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
                proxy_pass http://k8s;
        }

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }


	ssl_certificate ssl/agent3.crt;
	ssl_certificate_key ssl/agent3.key;
}

server {
        listen 0.0.0.0:80;
        server_name old-ways.test.server.com;

        listen 0.0.0.0:443 ssl http2;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;

	ssl_protocols TLSv1.2 TLSv1.3;
        ssl_stapling on;
        ssl_stapling_verify on;

        access_log /var/log/nginx/old-ways.test.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
                proxy_pass http://apache-backend;
        }

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
	ssl_certificate ssl/agent3.crt;
	ssl_certificate_key ssl/agent3.key;

}

server {
        listen 0.0.0.0:80;
        server_name mail.test.server.com;

        location ~ /(.*)$ {
                rewrite ^ http://test.server.com permanent;
        }

    listen 443 ssl http2;
    #include /etc/letsencrypt/options-ssl-nginx.conf;
    #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

    # Redirect non-https traffic to https
    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }

	ssl_certificate ssl/agent1.crt;
	ssl_certificate_key ssl/agent1.key;
}
server {
        server_name something.test.server.com;

        access_log /var/log/nginx/something.test.server.com-access.log combined;

        client_max_body_size 400m;
        client_body_timeout 3600;
        send_timeout 180;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        #Only cache 200 responses, and for a default of 20 minutes.
        proxy_cache_valid 200 20m;

        location / {
          allow 192.168.1.0/24;
          deny all;

                        # If logged in, don't cache.
                        if ($http_cookie ~* "comment_author_|wordpress_(?!test_cookie)|wp-postpass_" ) {
                                set $do_not_cache 1;
                        }

                        proxy_pass http://apache-backend;
        }

        location ~* wp\-login\.php {
          allow 192.168.1.0/24;
          deny all;

               proxy_pass http://apache-backend;
        }

        location ~* wp\-.*\.php|wp\-admin {
          allow 192.168.1.0/24;
          deny all;

                        # Don't static file cache admin-looking things.
                        proxy_pass http://apache-backend;
        }

        location ~* \.(jpg|png|gif|jpeg|js|mp3|wav|swf|mov|doc|pdf|xls|ppt|docx|pptx|xlsx)$ {
          allow 192.168.1.0/24;
          deny all;

                        proxy_pass http://apache-backend;

        }

        location = /50x.html {
          allow 192.168.1.0/24;
          deny all;

        }

        # No access to .htaccess files.
        location ~ /\.ht {
                deny all;
        }

#############################

    listen 443 ssl http2;
	ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
	ssl_prefer_server_ciphers on;
    add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";
    #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

   if ($scheme != "https") {
       return 301 https://$host$request_uri;
    }

	ssl_certificate ssl/agent2.crt;
	ssl_certificate_key ssl/agent2.key;
}

server {
        listen 0.0.0.0:80;
        server_name test.server.com;

        access_log /var/log/nginx/test.server.com-access.log combined;

        client_max_body_size 16m;
        client_body_timeout 3600;
        send_timeout 180;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        #Only cache 200 responses, and for a default of 20 minutes.
        proxy_cache_valid 200 20m;

        location / {
                        # If logged in, don't cache.
                        if ($http_cookie ~* "comment_author_|wordpress_(?!test_cookie)|wp-postpass_" ) {
                                set $do_not_cache 1;
                        }
                        proxy_cache_key "$scheme://$host$request_uri $do_not_cache";
                        proxy_cache staticfilecache;
                        proxy_pass http://apache-backend;
        }

        location ~* wp\-login\.php {
               proxy_pass http://apache-backend;
        }

        location ~* wp\-.*\.php|wp\-admin {
                        # Don't static file cache admin-looking things.
                        proxy_pass http://apache-backend;
        }

        location ~* \.(jpg|png|gif|jpeg|js|mp3|wav|swf|mov|doc|pdf|xls|ppt|docx|pptx|xlsx)$ {
                        # Cache static-looking files for 120 minutes, setting a 10 day expiry time in the HTTP header,
                        # whether logged in or not (may be too heavy-handed).
                        proxy_cache_valid 200 120m;
                        expires 864000;
                        proxy_pass http://apache-backend;
                        proxy_cache staticfilecache;
        }

        location = /50x.html {
        }

        # No access to .htaccess files.
        location ~ /\.ht {
                deny all;
        }

#############################

    listen 443 ssl http2;
	ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
	ssl_prefer_server_ciphers on;
    add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";
	ssl_certificate ssl/agent1.crt;
	ssl_certificate_key ssl/agent1.key;
}

server {
        server_name www.test.server.com;

	location / {
	    rewrite ^/(.*) $scheme://test.server.com/$1 permanent;
	}

    listen 443 ssl http2;
	ssl_certificate ssl/agent2.crt;
	ssl_certificate_key ssl/agent2.key;
    #include /etc/letsencrypt/options-ssl-nginx.conf;
    #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

}

server {
    if ($host = www.test.server.com) {
        return 301 https://$host$request_uri;
    }


        listen 0.0.0.0:80;
        server_name www.test.server.com;
    return 404;
}

server {
    if ($host = postfixadmintest.server.com) {
        return 301 https://$host$request_uri;
    }


        listen 0.0.0.0:80;
        server_name postfixadmintest.server.com;
    return 404;
}

server {
        server_name ssotest.server.com;

        access_log /var/log/nginx/ssotest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	proxy_set_header X-Forwarded-Proto https;
	proxy_set_header X-Forwarded-Port 443;

	error_page   403  /error403.html;
	location = /error403.html {
		return 200 '';
	}

        location ~ /auth/admin {
          allow 192.168.1.0/24;
          allow 10.0.0.0/8;
          deny all;
          proxy_pass http://k8s;
        }

        location / {
          proxy_pass http://k8s;
        }

    listen 443 ssl http2;

	ssl_stapling on;
	ssl_stapling_verify on;

	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }

	ssl_certificate ssl/agent3.crt;
	ssl_certificate_key ssl/agent3.key;
}



server {
    if ($host = finder.server.com) {
        return 301 https://$host$request_uri;
    }


        listen 0.0.0.0:80;
        server_name finder.server.com;
    return 404;


}}


http { 
    limit_conn_zone $binary_remote_addr zone=perip:10m;
    limit_conn_zone $server_name zone=perserver:10m;

    server_names_hash_bucket_size 64;
    server_tokens off; 
    more_set_headers 'Server: hidden';
    include       mime.types; 
    default_type  application/octet-stream; 
    access_log  testdata/configs/accesslogs/access.log; 
    client_body_temp_path /usr/local/nginx/body 1 2; 
    gzip_buffers 32 8k; 
    sendfile        on; 
    keepalive_timeout  65; 
    tcp_nodelay        on;
    #gzipping lets you serve more requests quicker. 
    gzip  on;
    #gzip_types text/html application/x-javascript application/javascript text/javascript text/css text/xml application/atom+xml application/xml;
    gzip_types application/x-javascript application/javascript text/javascript text/css text/xml application/atom+xml application/xml;

    ssl_session_cache shared:SSL:1m; # holds approx 4000 sessions
    ssl_session_timeout 1h; # 1 hour during which sessions can be re-used.
    ssl_session_tickets on;

    include location/*.conf;

# set some parameters: two levels deep for the filesystem 
# set the name of the cache to "staticfilecache", giving it a maximum cache time of 3 hours and 500meg in size. 
proxy_cache_path  /usr/local/nginx/cache  levels=1:2   keys_zone=staticfilecache:180m  max_size=500m; 
proxy_temp_path /usr/local/nginx/proxy; 
proxy_connect_timeout 30; 
proxy_read_timeout 120; 
proxy_send_timeout 120; 

#IMPORTANT - this sets the basic cache key that's used in the static file cache. 
proxy_cache_key "$scheme://$host$request_uri"; 

upstream apache-backend { 
        ip_hash;
        server 127.0.0.1:9080 fail_timeout=10s;
}

upstream k8s {
	ip_hash;
	server test.demolab.com:80 fail_timeout=10s;
	server dns.demolab.com:80 fail_timeout=10s;
}

upstream k8s-registry {
	ip_hash;
	server test.demolab.com:31005 fail_timeout=10s;
	server dns.demolab.com:31005 fail_timeout=10s;
}

upstream k8s-dashboard {
	ip_hash;
	server test.demolab.com:30443 fail_timeout=10s;
	server dns.demolab.com:30443 fail_timeout=10s;
}

upstream alarm {
	ip_hash;
	server 192.168.1.9:80 fail_timeout=10s;
}

upstream camera1 {
	ip_hash;
	server test.demolab.com fail_timeout=10s;
}
upstream camera2 {
	ip_hash;
	server test.demolab.com fail_timeout=10s;
}
upstream camera3 {
	ip_hash;
	server test.demolab.com fail_timeout=10s;
}
upstream camera4 {
	ip_hash;
	server test.demolab.com fail_timeout=10s;
}
upstream camera5 {
	ip_hash;
	server test.demolab.com fail_timeout=10s;
}

upstream rpi-octoprint {
	ip_hash;
	server test.demolab.com:80 fail_timeout=10s;
}

server {
	listen *:80 default_server deferred;
	server_name _;
	return 444;

        access_log /var/log/nginx/default-access.log combined;

        listen 0.0.0.0:443 ssl http2;
	# openssl req -x509 -nodes -days 3650 -newkey rsa:2048 -keyout /etc/nginx/ssl/nginx.key -out /etc/nginx/ssl/nginx.crt
	ssl_certificate ssl/agent2.crt;
	ssl_certificate_key ssl/agent2.key;
}

server {
        listen 0.0.0.0:443 ssl http2;
        server_name intranettest.server.com;

	ssl_certificate ssl/agent3.crt;
	ssl_certificate_key ssl/agent3.key;

	ssl_stapling on;
	ssl_stapling_verify on;
	ssl_trusted_certificate ssl/ca.crt;
	ssl_ecdh_curve auto;

	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
	ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        access_log /var/log/nginx/intranettest.server.com-access.log combined;
        error_log /var/log/nginx/intranettest.server.com-error.log;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

	location /nginx_status {

          stub_status on;
          access_log   off;
          allow 192.168.1.0/24;
          deny all;
        }

        location / {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://apache-backend;
        }

	location /camera1 {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://camera1/cgi-bin/CGIProxy.fcgi?cmd=snapPicture;
	}
	location /camera2 {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://camera2/cgi-bin/CGIProxy.fcgi?cmd=snapPicture;
	}
	location /camera3 {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://camera3/cgi-bin/CGIProxy.fcgi?cmd=snapPicture;
	}
	location /camera4 {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://camera4/cgi-bin/CGIProxy.fcgi?cmd=snapPicture;
	}
	location /camera5 {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://camera5/cgi-bin/CGIProxy.fcgi?cmd=snapPicture;
	}
	location /alarm/ {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://alarm/alarm/;
	}
}

server {

        listen 0.0.0.0:443 ssl http2;
        server_name finder.server.com;

	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
	ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        access_log /var/log/nginx/finder.server.com-access.log combined;
        error_log /var/log/nginx/finder.server.com-error.log;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;


	location ~ / {
		proxy_pass http://k8s;
	}
	ssl_certificate ssl/agent1.crt;
	ssl_certificate_key ssl/agent1.key;

	ssl_stapling on;
	ssl_stapling_verify on;
	ssl_trusted_certificate ssl/ca.crt;	

}

server {
        listen 0.0.0.0:443 ssl http2;
        server_name webmailtest.server.com;
        ssl_certificate ssl/agent1.crt;
        ssl_certificate_key ssl/agent1.key;

        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate ssl/ca.crt;	

	    ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        access_log /var/log/nginx/webmailtest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;

        proxy_set_header Host roundcube.k8stest.server.com;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
                proxy_pass http://k8s;
        }

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
}

server {
        listen 0.0.0.0:80;
        server_name admin.server.com;

        access_log /var/log/nginx/admin.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://apache-backend;
        }

    listen 443 ssl http2;
	ssl_certificate ssl/agent2.crt;
	ssl_certificate_key ssl/agent2.key;

	ssl_stapling on;
	ssl_stapling_verify on;
	ssl_trusted_certificate ssl/ca.crt;	

	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }

}

server {
        server_name postfixadmintest.server.com;

        access_log /var/log/nginx/postfixadmintest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://apache-backend;
        }

    listen 443 ssl http2;
#ssl_certificate /etc/letsencrypt/live/admin.server.com/fullchain.pem;
#ssl_certificate_key /etc/letsencrypt/live/admin.server.com/privkey.pem;

	ssl_stapling on;
	ssl_stapling_verify on;
	ssl_trusted_certificate ssl/ca.crt;

	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }

	ssl_certificate ssl/agent3.crt;
	ssl_certificate_key ssl/agent3.key;
}

server {
        server_name hometest.server.com;

        access_log /var/log/nginx/hometest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        #proxy_set_header Host openhab.k8stest.server.com;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	proxy_set_header X-Forwarded-Proto "https";
	proxy_set_header X-Forwarded-Port 443;

        location / {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;
                proxy_pass http://k8s;
        }

    listen 443 ssl http2;

	ssl_stapling on;
	ssl_stapling_verify on;

	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
	ssl_certificate ssl/agent1.crt;
	ssl_certificate_key ssl/agent1.key;
}

server {
        server_name piholetest.server.com;

        access_log /var/log/nginx/hometest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	proxy_set_header X-Forwarded-Proto "https";
	proxy_set_header X-Forwarded-Port 443;

        location / {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;
                proxy_pass http://k8s;
        }

    listen 443 ssl http2;

	ssl_stapling on;
	ssl_stapling_verify on;

	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }


	ssl_certificate ssl/agent2.crt;
	ssl_certificate_key ssl/agent2.key;
}

server {
	listen 0.0.0.0:80;
	server_name webmailtest.server.com intranettest.server.com;

	location / {
		rewrite (.*)$ https://$host$1 last;
	}
}

server {
        listen 0.0.0.0:80;
        server_name grafanatest.server.com;

        access_log /var/log/nginx/grafanatest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {


                proxy_pass http://k8s;
        }

    listen 443 ssl http2;
	ssl_certificate ssl/agent3.crt;
	ssl_certificate_key ssl/agent3.key;
    
#    include /etc/letsencrypt/options-ssl-nginx.conf;
	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate ssl/ca.crt;

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }

}

server {
        listen 0.0.0.0:80;
        server_name registrytest.server.com;

        access_log /var/log/nginx/registrytest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host registry.k8stest.server.com;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
          allow 192.168.1.0/24;
          allow 10.0.0.0/8;
          deny all;

          proxy_pass http://k8s-registry;
        }

    listen 443 ssl http2;
#    include /etc/letsencrypt/options-ssl-nginx.conf;
	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        ssl_stapling on;
        ssl_stapling_verify on;

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
	ssl_certificate ssl/agent1.crt;
	ssl_certificate_key ssl/agent1.key;
}

server {
        listen 0.0.0.0:80;
        server_name k8s-dashboardtest.server.com;

        access_log /var/log/nginx/k8s-dashboardtest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host dashboard.k8stest.server.com;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
          allow 192.168.1.0/24;
          allow 10.0.0.0/8;
          deny all;

          proxy_pass https://k8s-dashboard;
        }

    listen 443 ssl http2;
#    include /etc/letsencrypt/options-ssl-nginx.conf;
	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        ssl_stapling on;
        ssl_stapling_verify on;

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }

	ssl_certificate ssl/agent2.crt;
	ssl_certificate_key ssl/agent2.key;
}

server {
        listen 0.0.0.0:80;
        server_name prometheustest.server.com;

        access_log /var/log/nginx/prometheustest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host prometheus.k8stest.server.com;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://k8s;
        }

    listen 443 ssl http2;
	ssl_certificate ssl/agent3.crt;
	ssl_certificate_key ssl/agent3.key;
	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate ssl/ca.crt;

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }

}

server {
        server_name octoprinttest.server.com;

        access_log /var/log/nginx/octoprinttest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://rpi-octoprint;

		allow 192.168.1.0/24;
		deny all;
        }

    listen 443 ssl http2;
	ssl_certificate ssl/agent1.crt;
	ssl_certificate_key ssl/agent1.key;
    #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
	ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
	ssl_prefer_server_ciphers on;
	add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        ssl_stapling on;
        ssl_stapling_verify on;
	    ssl_trusted_certificate ssl/ca.crt;

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
}

server {
	listen 0.0.0.0:80;
	server_name mailtest.server.com;

        location ~ /(.*)$ {
                rewrite ^ http://wwwtest.server.com permanent;
        }

    listen 443 ssl http2;
	ssl_certificate ssl/agent2.crt;
	ssl_certificate_key ssl/agent2.key;
#    include /etc/letsencrypt/options-ssl-nginx.conf;

        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate ssl/ca.crt;

        ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

    # Redirect non-https traffic to https
    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
}

server {
        server_name wikitest.server.com;

        access_log /var/log/nginx/wikitest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	proxy_set_header X-Forwarded-Proto "https";
	proxy_set_header X-Forwarded-Port 443;

        location / {

                proxy_pass http://k8s;
        }

    listen 443 ssl http2;
    #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
	ssl_prefer_server_ciphers on;
	add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        ssl_stapling on;
        ssl_stapling_verify on;
	    ssl_trusted_certificate ssl/ca.crt;

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
	ssl_certificate ssl/agent3.crt;
	ssl_certificate_key ssl/agent3.key;
}

server {
        server_name homewikitest.server.com;

        access_log /var/log/nginx/homewikitest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
#        proxy_set_header Host homewiki.k8stest.server.com;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {

                proxy_pass http://k8s;
        }

    listen 443 ssl http2;
    #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
	ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
	ssl_prefer_server_ciphers on;
	add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate ssl/ca.crt;

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
	ssl_certificate ssl/agent1.crt;
	ssl_certificate_key ssl/agent1.key;
}

server {
        server_name p2ptest.server.com;
        access_log /var/log/nginx/p2p-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
                proxy_pass http://k8s;
        }

    listen 443 ssl http2;
	ssl_certificate ssl/agent2.crt;
	ssl_certificate_key ssl/agent2.key;

#    include /etc/letsencrypt/options-ssl-nginx.conf;
	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate ssl/ca.crt;

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
}

server {
        listen 0.0.0.0:80;
        server_name webmail.test.server.com;

        listen 0.0.0.0:443 ssl http2;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";
        ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;

	    ssl_protocols TLSv1.2 TLSv1.3;
        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate ssl/ca.crt;

        access_log /var/log/nginx/webmail.test.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;

        proxy_set_header Host roundcube.k8stest.server.com;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
                proxy_pass http://k8s;
        }

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }


	ssl_certificate ssl/agent3.crt;
	ssl_certificate_key ssl/agent3.key;
}

server {
        listen 0.0.0.0:80;
        server_name old-ways.test.server.com;

        listen 0.0.0.0:443 ssl http2;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;

	ssl_protocols TLSv1.2 TLSv1.3;
        ssl_stapling on;
        ssl_stapling_verify on;

        access_log /var/log/nginx/old-ways.test.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
                proxy_pass http://apache-backend;
        }

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
	ssl_certificate ssl/agent3.crt;
	ssl_certificate_key ssl/agent3.key;

}

server {
        listen 0.0.0.0:80;
        server_name mail.test.server.com;

        location ~ /(.*)$ {
                rewrite ^ http://test.server.com permanent;
        }

    listen 443 ssl http2;
    add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

    # Redirect non-https traffic to https
    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }

	ssl_certificate ssl/agent1.crt;
	ssl_certificate_key ssl/agent1.key;
}
server {
        server_name something.test.server.com;

        access_log /var/log/nginx/something.test.server.com-access.log combined;

        client_max_body_size 400m;
        client_body_timeout 3600;
        send_timeout 180;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        #Only cache 200 responses, and for a default of 20 minutes.
        proxy_cache_valid 200 20m;

        location / {
          allow 192.168.1.0/24;
          deny all;

                        # If logged in, don't cache.
                        if ($http_cookie ~* "comment_author_|wordpress_(?!test_cookie)|wp-postpass_" ) {
                                set $do_not_cache 1;
                        }
                        proxy_pass http://apache-backend;
        }

        location ~* wp\-login\.php {
          allow 192.168.1.0/24;
          deny all;

               proxy_pass http://apache-backend;
        }

        location ~* wp\-.*\.php|wp\-admin {
          allow 192.168.1.0/24;
          deny all;

                        # Don't static file cache admin-looking things.
                        proxy_pass http://apache-backend;
        }

        location ~* \.(jpg|png|gif|jpeg|js|mp3|wav|swf|mov|doc|pdf|xls|ppt|docx|pptx|xlsx)$ {
          allow 192.168.1.0/24;
          deny all;
                        proxy_pass http://apache-backend;
        }

        location = /50x.html {
          allow 192.168.1.0/24;
          deny all;
        }

        # No access to .htaccess files.
        location ~ /\.ht {
                deny all;
        }

#############################

    listen 443 ssl http2;
	ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
	ssl_prefer_server_ciphers on;
    add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

   if ($scheme != "https") {
       return 301 https://$host$request_uri;
    }

	ssl_certificate ssl/agent2.crt;
	ssl_certificate_key ssl/agent2.key;
}

server {
        listen 0.0.0.0:80;
        server_name test.server.com;

        access_log /var/log/nginx/test.server.com-access.log combined;

        client_max_body_size 16m;
        client_body_timeout 3600;
        send_timeout 180;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        #Only cache 200 responses, and for a default of 20 minutes.
        proxy_cache_valid 200 20m;

        location / {
                        # If logged in, don't cache.
                        if ($http_cookie ~* "comment_author_|wordpress_(?!test_cookie)|wp-postpass_" ) {
                                set $do_not_cache 1;
                        }
                        proxy_cache_key "$scheme://$host$request_uri $do_not_cache";
                        proxy_cache staticfilecache;
                        proxy_pass http://apache-backend;
        }

        location ~* wp\-login\.php {
               proxy_pass http://apache-backend;
        }

        location ~* wp\-.*\.php|wp\-admin {
                        # Don't static file cache admin-looking things.
                        proxy_pass http://apache-backend;
        }

        location ~* \.(jpg|png|gif|jpeg|js|mp3|wav|swf|mov|doc|pdf|xls|ppt|docx|pptx|xlsx)$ {
                        # Cache static-looking files for 120 minutes, setting a 10 day expiry time in the HTTP header,
                        # whether logged in or not (may be too heavy-handed).
                        proxy_cache_valid 200 120m;
                        expires 864000;
                        proxy_pass http://apache-backend;
                        proxy_cache staticfilecache;
        }

        location = /50x.html {
        }

        # No access to .htaccess files.
        location ~ /\.ht {
                deny all;
        }

#############################

    listen 443 ssl http2;
	ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
	ssl_prefer_server_ciphers on;
    add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";
	ssl_certificate ssl/agent1.crt;
	ssl_certificate_key ssl/agent1.key;
}

server {
        server_name www.test.server.com;

	location / {
	    rewrite ^/(.*) $scheme://test.server.com/$1 permanent;
	}

    listen 443 ssl http2;
	ssl_certificate ssl/agent2.crt;
	ssl_certificate_key ssl/agent2.key;
    #include /etc/letsencrypt/options-ssl-nginx.conf;
    #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

}

server {
    if ($host = www.test.server.com) {
        return 301 https://$host$request_uri;
    }


        listen 0.0.0.0:80;
        server_name www.test.server.com;
    return 404;
}

server {
    if ($host = postfixadmintest.server.com) {
        return 301 https://$host$request_uri;
    }


        listen 0.0.0.0:80;
        server_name postfixadmintest.server.com;
    return 404;
}

server {
        server_name ssotest.server.com;

        access_log /var/log/nginx/ssotest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	proxy_set_header X-Forwarded-Proto https;
	proxy_set_header X-Forwarded-Port 443;

	error_page   403  /error403.html;
	location = /error403.html {
		return 200 '';
	}

        location ~ /auth/admin {
          allow 192.168.1.0/24;
          allow 10.0.0.0/8;
          deny all;
          proxy_pass http://k8s;
        }

        location / {
          proxy_pass http://k8s;
        }

    listen 443 ssl http2;

	ssl_stapling on;
	ssl_stapling_verify on;

	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }

	ssl_certificate ssl/agent3.crt;
	ssl_certificate_key ssl/agent3.key;
}



server {
    if ($host = finder.server.com) {
        return 301 https://$host$request_uri;
    }


        listen 0.0.0.0:80;
        server_name finder.server.com;
    return 404;


}}


user root; 
worker_processes  8;
error_log  /var/log/nginx/error.log; 
pid        /var/run/nginx.pid; 

load_module /usr/lib/nginx/modules/ngx_http_headers_more_filter_module.so;
load_module /usr/lib/nginx/modules/ngx_http_naxsi_module.so; # load naxsi

events { 
    #A maximum of 1024 concurrent connections. 
    worker_connections  1024;
} 

http { 
    limit_conn_zone $binary_remote_addr zone=perip:10m;
    limit_conn_zone $server_name zone=perserver:10m;

    server_names_hash_bucket_size 64;
    server_tokens off; 
    more_set_headers 'Server: hidden';
    include       mime.types; 
    default_type  application/octet-stream; 
    access_log  testdata/configs/accesslogs/access.log; 
    client_body_temp_path /usr/local/nginx/body 1 2; 
    gzip_buffers 32 8k; 
    sendfile        on; 
    keepalive_timeout  65; 
    tcp_nodelay        on;
    #gzipping lets you serve more requests quicker. 
    gzip  on;
    #gzip_types text/html application/x-javascript application/javascript text/javascript text/css text/xml application/atom+xml application/xml;
    gzip_types application/x-javascript application/javascript text/javascript text/css text/xml application/atom+xml application/xml;

    ssl_session_cache shared:SSL:1m; # holds approx 4000 sessions
    ssl_session_timeout 1h; # 1 hour during which sessions can be re-used.
    ssl_session_tickets on;

    include location/*.conf;

# set some parameters: two levels deep for the filesystem 
# set the name of the cache to "staticfilecache", giving it a maximum cache time of 3 hours and 500meg in size. 
proxy_cache_path  /usr/local/nginx/cache  levels=1:2   keys_zone=staticfilecache:180m  max_size=500m; 
proxy_temp_path /usr/local/nginx/proxy; 
proxy_connect_timeout 30; 
proxy_read_timeout 120; 
proxy_send_timeout 120; 

#IMPORTANT - this sets the basic cache key that's used in the static file cache. 
proxy_cache_key "$scheme://$host$request_uri"; 

upstream apache-backend { 
        ip_hash;
        server 127.0.0.1:9080 fail_timeout=10s;
}

upstream k8s {
	ip_hash;
	server test.demolab.com:80 fail_timeout=10s;
	server dns.demolab.com:80 fail_timeout=10s;
}

upstream k8s-registry {
	ip_hash;
	server test.demolab.com:31005 fail_timeout=10s;
	server dns.demolab.com:31005 fail_timeout=10s;
}

upstream k8s-dashboard {
	ip_hash;
	server test.demolab.com:30443 fail_timeout=10s;
	server dns.demolab.com:30443 fail_timeout=10s;
}

upstream alarm {
	ip_hash;
	server 192.168.1.9:80 fail_timeout=10s;
}

upstream camera1 {
	ip_hash;
	server test.demolab.com fail_timeout=10s;
}
upstream camera2 {
	ip_hash;
	server test.demolab.com fail_timeout=10s;
}
upstream camera3 {
	ip_hash;
	server test.demolab.com fail_timeout=10s;
}
upstream camera4 {
	ip_hash;
	server test.demolab.com fail_timeout=10s;
}
upstream camera5 {
	ip_hash;
	server test.demolab.com fail_timeout=10s;
}

upstream rpi-octoprint {
	ip_hash;
	server test.demolab.com:80 fail_timeout=10s;
}

server {
	listen *:80 default_server deferred;
	server_name _;
	return 444;

        access_log /var/log/nginx/default-access.log combined;

        listen 0.0.0.0:443 ssl http2;
	# openssl req -x509 -nodes -days 3650 -newkey rsa:2048 -keyout /etc/nginx/ssl/nginx.key -out /etc/nginx/ssl/nginx.crt
	ssl_certificate ssl/agent2.crt;
	ssl_certificate_key ssl/agent2.key;
}

server {
        listen 0.0.0.0:443 ssl http2;
        server_name intranettest.server.com;

	ssl_certificate ssl/agent3.crt;
	ssl_certificate_key ssl/agent3.key;

	ssl_stapling on;
	ssl_stapling_verify on;
	ssl_trusted_certificate ssl/ca.crt;
	ssl_ecdh_curve auto;

	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
	ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        access_log /var/log/nginx/intranettest.server.com-access.log combined;
        error_log /var/log/nginx/intranettest.server.com-error.log;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

	location /nginx_status {

          stub_status on;
          access_log   off;
          allow 192.168.1.0/24;
          deny all;
        }

        location / {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://apache-backend;
        }

	location /camera1 {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://camera1/cgi-bin/CGIProxy.fcgi?cmd=snapPicture;
	}
	location /camera2 {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://camera2/cgi-bin/CGIProxy.fcgi?cmd=snapPicture;
	}
	location /camera3 {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://camera3/cgi-bin/CGIProxy.fcgi?cmd=snapPicture;
	}
	location /camera4 {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://camera4/cgi-bin/CGIProxy.fcgi?cmd=snapPicture;
	}
	location /camera5 {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://camera5/cgi-bin/CGIProxy.fcgi?cmd=snapPicture;
	}
	location /alarm/ {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://alarm/alarm/;
	}
}

server {

        listen 0.0.0.0:443 ssl http2;
        server_name finder.server.com;

	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
	ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        access_log /var/log/nginx/finder.server.com-access.log combined;
        error_log /var/log/nginx/finder.server.com-error.log;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;


	location ~ / {
		proxy_pass http://k8s;
	}
	ssl_certificate ssl/agent1.crt;
	ssl_certificate_key ssl/agent1.key;

	ssl_stapling on;
	ssl_stapling_verify on;
	ssl_trusted_certificate ssl/ca.crt;	

}

server {
        listen 0.0.0.0:443 ssl http2;
        server_name webmailtest.server.com;
        ssl_certificate ssl/agent1.crt;
        ssl_certificate_key ssl/agent1.key;

        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate ssl/ca.crt;	

	    ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        access_log /var/log/nginx/webmailtest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;

        proxy_set_header Host roundcube.k8stest.server.com;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
                proxy_pass http://k8s;
        }

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
}

server {
        listen 0.0.0.0:80;
        server_name admin.server.com;

        access_log /var/log/nginx/admin.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://apache-backend;
        }

    listen 443 ssl http2;
	ssl_certificate ssl/agent2.crt;
	ssl_certificate_key ssl/agent2.key;

	ssl_stapling on;
	ssl_stapling_verify on;
	ssl_trusted_certificate ssl/ca.crt;	

	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }

}

server {
        server_name postfixadmintest.server.com;

        access_log /var/log/nginx/postfixadmintest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://apache-backend;
        }

    listen 443 ssl http2;
#ssl_certificate /etc/letsencrypt/live/admin.server.com/fullchain.pem;
#ssl_certificate_key /etc/letsencrypt/live/admin.server.com/privkey.pem;

	ssl_stapling on;
	ssl_stapling_verify on;
	ssl_trusted_certificate ssl/ca.crt;

	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }

	ssl_certificate ssl/agent3.crt;
	ssl_certificate_key ssl/agent3.key;
}

server {
        server_name hometest.server.com;

        access_log /var/log/nginx/hometest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        #proxy_set_header Host openhab.k8stest.server.com;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	proxy_set_header X-Forwarded-Proto "https";
	proxy_set_header X-Forwarded-Port 443;

        location / {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;
                proxy_pass http://k8s;
        }

    listen 443 ssl http2;

	ssl_stapling on;
	ssl_stapling_verify on;

	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
	ssl_certificate ssl/agent1.crt;
	ssl_certificate_key ssl/agent1.key;
}

server {
        server_name piholetest.server.com;

        access_log /var/log/nginx/hometest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	proxy_set_header X-Forwarded-Proto "https";
	proxy_set_header X-Forwarded-Port 443;

        location / {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;
                proxy_pass http://k8s;
        }

    listen 443 ssl http2;

	ssl_stapling on;
	ssl_stapling_verify on;

	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }


	ssl_certificate ssl/agent2.crt;
	ssl_certificate_key ssl/agent2.key;
}

server {
	listen 0.0.0.0:80;
	server_name webmailtest.server.com intranettest.server.com;

	location / {
		rewrite (.*)$ https://$host$1 last;
	}
}

server {
        listen 0.0.0.0:80;
        server_name grafanatest.server.com;

        access_log /var/log/nginx/grafanatest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {


                proxy_pass http://k8s;
        }

    listen 443 ssl http2;
	ssl_certificate ssl/agent3.crt;
	ssl_certificate_key ssl/agent3.key;
    
#    include /etc/letsencrypt/options-ssl-nginx.conf;
	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate ssl/ca.crt;

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }

}

server {
        listen 0.0.0.0:80;
        server_name registrytest.server.com;

        access_log /var/log/nginx/registrytest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host registry.k8stest.server.com;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
          allow 192.168.1.0/24;
          allow 10.0.0.0/8;
          deny all;

          proxy_pass http://k8s-registry;
        }

    listen 443 ssl http2;
#    include /etc/letsencrypt/options-ssl-nginx.conf;
	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        ssl_stapling on;
        ssl_stapling_verify on;

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
	ssl_certificate ssl/agent1.crt;
	ssl_certificate_key ssl/agent1.key;
}

server {
        listen 0.0.0.0:80;
        server_name k8s-dashboardtest.server.com;

        access_log /var/log/nginx/k8s-dashboardtest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host dashboard.k8stest.server.com;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
          allow 192.168.1.0/24;
          allow 10.0.0.0/8;
          deny all;

          proxy_pass https://k8s-dashboard;
        }

    listen 443 ssl http2;
#    include /etc/letsencrypt/options-ssl-nginx.conf;
	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        ssl_stapling on;
        ssl_stapling_verify on;

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }

	ssl_certificate ssl/agent2.crt;
	ssl_certificate_key ssl/agent2.key;
}

server {
        listen 0.0.0.0:80;
        server_name prometheustest.server.com;

        access_log /var/log/nginx/prometheustest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host prometheus.k8stest.server.com;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://k8s;
        }

    listen 443 ssl http2;
	ssl_certificate ssl/agent3.crt;
	ssl_certificate_key ssl/agent3.key;
	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate ssl/ca.crt;

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }

}

server {
        server_name octoprinttest.server.com;

        access_log /var/log/nginx/octoprinttest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://rpi-octoprint;

		allow 192.168.1.0/24;
		deny all;
        }

    listen 443 ssl http2;
	ssl_certificate ssl/agent1.crt;
	ssl_certificate_key ssl/agent1.key;
    #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
	ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
	ssl_prefer_server_ciphers on;
	add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        ssl_stapling on;
        ssl_stapling_verify on;
	    ssl_trusted_certificate ssl/ca.crt;

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
}

server {
	listen 0.0.0.0:80;
	server_name mailtest.server.com;

        location ~ /(.*)$ {
                rewrite ^ http://wwwtest.server.com permanent;
        }

    listen 443 ssl http2;
	ssl_certificate ssl/agent2.crt;
	ssl_certificate_key ssl/agent2.key;
#    include /etc/letsencrypt/options-ssl-nginx.conf;

        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate ssl/ca.crt;

        ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

    # Redirect non-https traffic to https
    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
}

server {
        server_name wikitest.server.com;

        access_log /var/log/nginx/wikitest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	proxy_set_header X-Forwarded-Proto "https";
	proxy_set_header X-Forwarded-Port 443;

        location / {

                proxy_pass http://k8s;
        }

    listen 443 ssl http2;
    #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
	ssl_prefer_server_ciphers on;
	add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        ssl_stapling on;
        ssl_stapling_verify on;
	    ssl_trusted_certificate ssl/ca.crt;

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
	ssl_certificate ssl/agent3.crt;
	ssl_certificate_key ssl/agent3.key;
}

server {
        server_name homewikitest.server.com;

        access_log /var/log/nginx/homewikitest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
#        proxy_set_header Host homewiki.k8stest.server.com;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {

                proxy_pass http://k8s;
        }

    listen 443 ssl http2;
    #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
	ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
	ssl_prefer_server_ciphers on;
	add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate ssl/ca.crt;

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
	ssl_certificate ssl/agent1.crt;
	ssl_certificate_key ssl/agent1.key;
}

server {
        server_name p2ptest.server.com;
        access_log /var/log/nginx/p2p-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
                proxy_pass http://k8s;
        }

    listen 443 ssl http2;
	ssl_certificate ssl/agent2.crt;
	ssl_certificate_key ssl/agent2.key;

#    include /etc/letsencrypt/options-ssl-nginx.conf;
	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate ssl/ca.crt;

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
}

server {
        listen 0.0.0.0:80;
        server_name webmail.test.server.com;

        listen 0.0.0.0:443 ssl http2;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";
        ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;

	    ssl_protocols TLSv1.2 TLSv1.3;
        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate ssl/ca.crt;

        access_log /var/log/nginx/webmail.test.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;

        proxy_set_header Host roundcube.k8stest.server.com;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
                proxy_pass http://k8s;
        }

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }


	ssl_certificate ssl/agent3.crt;
	ssl_certificate_key ssl/agent3.key;
}

server {
        listen 0.0.0.0:80;
        server_name old-ways.test.server.com;

        listen 0.0.0.0:443 ssl http2;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;

	ssl_protocols TLSv1.2 TLSv1.3;
        ssl_stapling on;
        ssl_stapling_verify on;

        access_log /var/log/nginx/old-ways.test.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
                proxy_pass http://apache-backend;
        }

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
	ssl_certificate ssl/agent3.crt;
	ssl_certificate_key ssl/agent3.key;

}

server {
        listen 0.0.0.0:80;
        server_name mail.test.server.com;

        location ~ /(.*)$ {
                rewrite ^ http://test.server.com permanent;
        }

    listen 443 ssl http2;
    #include /etc/letsencrypt/options-ssl-nginx.conf;
    #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

    # Redirect non-https traffic to https
    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }

	ssl_certificate ssl/agent1.crt;
	ssl_certificate_key ssl/agent1.key;
}
server {
        server_name something.test.server.com;

        access_log /var/log/nginx/something.test.server.com-access.log combined;

        client_max_body_size 400m;
        client_body_timeout 3600;
        send_timeout 180;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        #Only cache 200 responses, and for a default of 20 minutes.
        proxy_cache_valid 200 20m;

        location / {
          allow 192.168.1.0/24;
          deny all;

                        # If logged in, don't cache.
                        if ($http_cookie ~* "comment_author_|wordpress_(?!test_cookie)|wp-postpass_" ) {
                                set $do_not_cache 1;
                        }

                        proxy_pass http://apache-backend;
        }

        location ~* wp\-login\.php {
          allow 192.168.1.0/24;
          deny all;

               proxy_pass http://apache-backend;
        }

        location ~* wp\-.*\.php|wp\-admin {
          allow 192.168.1.0/24;
          deny all;

                        # Don't static file cache admin-looking things.
                        proxy_pass http://apache-backend;
        }

        location ~* \.(jpg|png|gif|jpeg|js|mp3|wav|swf|mov|doc|pdf|xls|ppt|docx|pptx|xlsx)$ {
          allow 192.168.1.0/24;
          deny all;

                        proxy_pass http://apache-backend;

        }

        location = /50x.html {
          allow 192.168.1.0/24;
          deny all;

        }

        # No access to .htaccess files.
        location ~ /\.ht {
                deny all;
        }

#############################

    listen 443 ssl http2;
	ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
	ssl_prefer_server_ciphers on;
    add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";
    #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

   if ($scheme != "https") {
       return 301 https://$host$request_uri;
    }

	ssl_certificate ssl/agent2.crt;
	ssl_certificate_key ssl/agent2.key;
}

server {
        listen 0.0.0.0:80;
        server_name test.server.com;

        access_log /var/log/nginx/test.server.com-access.log combined;

        client_max_body_size 16m;
        client_body_timeout 3600;
        send_timeout 180;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        #Only cache 200 responses, and for a default of 20 minutes.
        proxy_cache_valid 200 20m;

        location / {
                        # If logged in, don't cache.
                        if ($http_cookie ~* "comment_author_|wordpress_(?!test_cookie)|wp-postpass_" ) {
                                set $do_not_cache 1;
                        }
                        proxy_cache_key "$scheme://$host$request_uri $do_not_cache";
                        proxy_cache staticfilecache;
                        proxy_pass http://apache-backend;
        }

        location ~* wp\-login\.php {
               proxy_pass http://apache-backend;
        }

        location ~* wp\-.*\.php|wp\-admin {
                        # Don't static file cache admin-looking things.
                        proxy_pass http://apache-backend;
        }

        location ~* \.(jpg|png|gif|jpeg|js|mp3|wav|swf|mov|doc|pdf|xls|ppt|docx|pptx|xlsx)$ {
                        # Cache static-looking files for 120 minutes, setting a 10 day expiry time in the HTTP header,
                        # whether logged in or not (may be too heavy-handed).
                        proxy_cache_valid 200 120m;
                        expires 864000;
                        proxy_pass http://apache-backend;
                        proxy_cache staticfilecache;
        }


        location = /50x.html {
        }

        # No access to .htaccess files.
        location ~ /\.ht {
                deny all;
        }

#############################

    listen 443 ssl http2;
#    include /etc/letsencrypt/options-ssl-nginx.conf;
	ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
	ssl_prefer_server_ciphers on;
    add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";
    #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
#    add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

#    if ($scheme != "https") {
#        return 301 https://$host$request_uri;
#    }
	ssl_certificate ssl/agent1.crt;
	ssl_certificate_key ssl/agent1.key;
}

server {
        server_name www.test.server.com;

	location / {
	    rewrite ^/(.*) $scheme://test.server.com/$1 permanent;
	}

    listen 443 ssl http2;
	ssl_certificate ssl/agent2.crt;
	ssl_certificate_key ssl/agent2.key;
    #include /etc/letsencrypt/options-ssl-nginx.conf;
    #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

}

server {
    if ($host = www.test.server.com) {
        return 301 https://$host$request_uri;
    }


        listen 0.0.0.0:80;
        server_name www.test.server.com;
    return 404;
}

server {
    if ($host = postfixadmintest.server.com) {
        return 301 https://$host$request_uri;
    }


        listen 0.0.0.0:80;
        server_name postfixadmintest.server.com;
    return 404;
}

server {
        server_name ssotest.server.com;

        access_log /var/log/nginx/ssotest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	proxy_set_header X-Forwarded-Proto https;
	proxy_set_header X-Forwarded-Port 443;

	error_page   403  /error403.html;
	location = /error403.html {
		return 200 '';
	}

        location ~ /auth/admin {
          allow 192.168.1.0/24;
          allow 10.0.0.0/8;
          deny all;
          proxy_pass http://k8s;
        }

        location / {
          proxy_pass http://k8s;
        }

    listen 443 ssl http2;

	ssl_stapling on;
	ssl_stapling_verify on;

	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }

	ssl_certificate ssl/agent3.crt;
	ssl_certificate_key ssl/agent3.key;
}



server {
    if ($host = finder.server.com) {
        return 301 https://$host$request_uri;
    }


        listen 0.0.0.0:80;
        server_name finder.server.com;
    return 404;


}}


http { 
    limit_conn_zone $binary_remote_addr zone=perip:10m;
    limit_conn_zone $server_name zone=perserver:10m;

    server_names_hash_bucket_size 64;
    server_tokens off; 
    more_set_headers 'Server: hidden';
    include       mime.types; 
    default_type  application/octet-stream; 
    access_log  testdata/configs/accesslogs/access.log; 
    client_body_temp_path /usr/local/nginx/body 1 2; 
    gzip_buffers 32 8k; 
    sendfile        on; 
    keepalive_timeout  65; 
    tcp_nodelay        on;
    #gzipping lets you serve more requests quicker. 
    gzip  on;
    #gzip_types text/html application/x-javascript application/javascript text/javascript text/css text/xml application/atom+xml application/xml;
    gzip_types application/x-javascript application/javascript text/javascript text/css text/xml application/atom+xml application/xml;

    ssl_session_cache shared:SSL:1m; # holds approx 4000 sessions
    ssl_session_timeout 1h; # 1 hour during which sessions can be re-used.
    ssl_session_tickets on;

    include location/*.conf;

# set some parameters: two levels deep for the filesystem 
# set the name of the cache to "staticfilecache", giving it a maximum cache time of 3 hours and 500meg in size. 
proxy_cache_path  /usr/local/nginx/cache  levels=1:2   keys_zone=staticfilecache:180m  max_size=500m; 
proxy_temp_path /usr/local/nginx/proxy; 
proxy_connect_timeout 30; 
proxy_read_timeout 120; 
proxy_send_timeout 120; 

#IMPORTANT - this sets the basic cache key that's used in the static file cache. 
proxy_cache_key "$scheme://$host$request_uri"; 

upstream apache-backend { 
        ip_hash;
        server 127.0.0.1:9080 fail_timeout=10s;
}

upstream k8s {
	ip_hash;
	server test.demolab.com:80 fail_timeout=10s;
	server dns.demolab.com:80 fail_timeout=10s;
}

upstream k8s-registry {
	ip_hash;
	server test.demolab.com:31005 fail_timeout=10s;
	server dns.demolab.com:31005 fail_timeout=10s;
}

upstream k8s-dashboard {
	ip_hash;
	server test.demolab.com:30443 fail_timeout=10s;
	server dns.demolab.com:30443 fail_timeout=10s;
}

upstream alarm {
	ip_hash;
	server 192.168.1.9:80 fail_timeout=10s;
}

upstream camera1 {
	ip_hash;
	server test.demolab.com fail_timeout=10s;
}
upstream camera2 {
	ip_hash;
	server test.demolab.com fail_timeout=10s;
}
upstream camera3 {
	ip_hash;
	server test.demolab.com fail_timeout=10s;
}
upstream camera4 {
	ip_hash;
	server test.demolab.com fail_timeout=10s;
}
upstream camera5 {
	ip_hash;
	server test.demolab.com fail_timeout=10s;
}

upstream rpi-octoprint {
	ip_hash;
	server test.demolab.com:80 fail_timeout=10s;
}

server {
	listen *:80 default_server deferred;
	server_name _;
	return 444;

        access_log /var/log/nginx/default-access.log combined;

        listen 0.0.0.0:443 ssl http2;
	# openssl req -x509 -nodes -days 3650 -newkey rsa:2048 -keyout /etc/nginx/ssl/nginx.key -out /etc/nginx/ssl/nginx.crt
	ssl_certificate ssl/agent2.crt;
	ssl_certificate_key ssl/agent2.key;
}

server {
        listen 0.0.0.0:443 ssl http2;
        server_name intranettest.server.com;

	ssl_certificate ssl/agent3.crt;
	ssl_certificate_key ssl/agent3.key;

	ssl_stapling on;
	ssl_stapling_verify on;
	ssl_trusted_certificate ssl/ca.crt;
	ssl_ecdh_curve auto;

	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
	ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        access_log /var/log/nginx/intranettest.server.com-access.log combined;
        error_log /var/log/nginx/intranettest.server.com-error.log;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

	location /nginx_status {

          stub_status on;
          access_log   off;
          allow 192.168.1.0/24;
          deny all;
        }

        location / {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://apache-backend;
        }

	location /camera1 {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://camera1/cgi-bin/CGIProxy.fcgi?cmd=snapPicture;
	}
	location /camera2 {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://camera2/cgi-bin/CGIProxy.fcgi?cmd=snapPicture;
	}
	location /camera3 {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://camera3/cgi-bin/CGIProxy.fcgi?cmd=snapPicture;
	}
	location /camera4 {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://camera4/cgi-bin/CGIProxy.fcgi?cmd=snapPicture;
	}
	location /camera5 {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://camera5/cgi-bin/CGIProxy.fcgi?cmd=snapPicture;
	}
	location /alarm/ {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://alarm/alarm/;
	}
}

server {

        listen 0.0.0.0:443 ssl http2;
        server_name finder.server.com;

	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
	ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        access_log /var/log/nginx/finder.server.com-access.log combined;
        error_log /var/log/nginx/finder.server.com-error.log;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;


	location ~ / {
		proxy_pass http://k8s;
	}
	ssl_certificate ssl/agent1.crt;
	ssl_certificate_key ssl/agent1.key;

	ssl_stapling on;
	ssl_stapling_verify on;
	ssl_trusted_certificate ssl/ca.crt;	

}

server {
        listen 0.0.0.0:443 ssl http2;
        server_name webmailtest.server.com;
        ssl_certificate ssl/agent1.crt;
        ssl_certificate_key ssl/agent1.key;

        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate ssl/ca.crt;	

	    ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        access_log /var/log/nginx/webmailtest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;

        proxy_set_header Host roundcube.k8stest.server.com;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
                proxy_pass http://k8s;
        }

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
}

server {
        listen 0.0.0.0:80;
        server_name admin.server.com;

        access_log /var/log/nginx/admin.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://apache-backend;
        }

    listen 443 ssl http2;
	ssl_certificate ssl/agent2.crt;
	ssl_certificate_key ssl/agent2.key;

	ssl_stapling on;
	ssl_stapling_verify on;
	ssl_trusted_certificate ssl/ca.crt;	

	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }

}

server {
        server_name postfixadmintest.server.com;

        access_log /var/log/nginx/postfixadmintest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://apache-backend;
        }

    listen 443 ssl http2;
#ssl_certificate /etc/letsencrypt/live/admin.server.com/fullchain.pem;
#ssl_certificate_key /etc/letsencrypt/live/admin.server.com/privkey.pem;

	ssl_stapling on;
	ssl_stapling_verify on;
	ssl_trusted_certificate ssl/ca.crt;

	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }

	ssl_certificate ssl/agent3.crt;
	ssl_certificate_key ssl/agent3.key;
}

server {
        server_name hometest.server.com;

        access_log /var/log/nginx/hometest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        #proxy_set_header Host openhab.k8stest.server.com;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	proxy_set_header X-Forwarded-Proto "https";
	proxy_set_header X-Forwarded-Port 443;

        location / {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;
                proxy_pass http://k8s;
        }

    listen 443 ssl http2;

	ssl_stapling on;
	ssl_stapling_verify on;

	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
	ssl_certificate ssl/agent1.crt;
	ssl_certificate_key ssl/agent1.key;
}

server {
        server_name piholetest.server.com;

        access_log /var/log/nginx/hometest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	proxy_set_header X-Forwarded-Proto "https";
	proxy_set_header X-Forwarded-Port 443;

        location / {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;
                proxy_pass http://k8s;
        }

    listen 443 ssl http2;

	ssl_stapling on;
	ssl_stapling_verify on;

	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }


	ssl_certificate ssl/agent2.crt;
	ssl_certificate_key ssl/agent2.key;
}

server {
	listen 0.0.0.0:80;
	server_name webmailtest.server.com intranettest.server.com;

	location / {
		rewrite (.*)$ https://$host$1 last;
	}
}

server {
        listen 0.0.0.0:80;
        server_name grafanatest.server.com;

        access_log /var/log/nginx/grafanatest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {


                proxy_pass http://k8s;
        }

    listen 443 ssl http2;
	ssl_certificate ssl/agent3.crt;
	ssl_certificate_key ssl/agent3.key;
    
#    include /etc/letsencrypt/options-ssl-nginx.conf;
	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate ssl/ca.crt;

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }

}

server {
        listen 0.0.0.0:80;
        server_name registrytest.server.com;

        access_log /var/log/nginx/registrytest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host registry.k8stest.server.com;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
          allow 192.168.1.0/24;
          allow 10.0.0.0/8;
          deny all;

          proxy_pass http://k8s-registry;
        }

    listen 443 ssl http2;
#    include /etc/letsencrypt/options-ssl-nginx.conf;
	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        ssl_stapling on;
        ssl_stapling_verify on;

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
	ssl_certificate ssl/agent1.crt;
	ssl_certificate_key ssl/agent1.key;
}

server {
        listen 0.0.0.0:80;
        server_name k8s-dashboardtest.server.com;

        access_log /var/log/nginx/k8s-dashboardtest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host dashboard.k8stest.server.com;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
          allow 192.168.1.0/24;
          allow 10.0.0.0/8;
          deny all;

          proxy_pass https://k8s-dashboard;
        }

    listen 443 ssl http2;
#    include /etc/letsencrypt/options-ssl-nginx.conf;
	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        ssl_stapling on;
        ssl_stapling_verify on;

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }

	ssl_certificate ssl/agent2.crt;
	ssl_certificate_key ssl/agent2.key;
}

server {
        listen 0.0.0.0:80;
        server_name prometheustest.server.com;

        access_log /var/log/nginx/prometheustest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host prometheus.k8stest.server.com;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://k8s;
        }

    listen 443 ssl http2;
	ssl_certificate ssl/agent3.crt;
	ssl_certificate_key ssl/agent3.key;
	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate ssl/ca.crt;

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }

}

server {
        server_name octoprinttest.server.com;

        access_log /var/log/nginx/octoprinttest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://rpi-octoprint;

		allow 192.168.1.0/24;
		deny all;
        }

    listen 443 ssl http2;
	ssl_certificate ssl/agent1.crt;
	ssl_certificate_key ssl/agent1.key;
    #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
	ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
	ssl_prefer_server_ciphers on;
	add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        ssl_stapling on;
        ssl_stapling_verify on;
	    ssl_trusted_certificate ssl/ca.crt;

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
}

server {
	listen 0.0.0.0:80;
	server_name mailtest.server.com;

        location ~ /(.*)$ {
                rewrite ^ http://wwwtest.server.com permanent;
        }

    listen 443 ssl http2;
	ssl_certificate ssl/agent2.crt;
	ssl_certificate_key ssl/agent2.key;
#    include /etc/letsencrypt/options-ssl-nginx.conf;

        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate ssl/ca.crt;

        ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

    # Redirect non-https traffic to https
    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
}

server {
        server_name wikitest.server.com;

        access_log /var/log/nginx/wikitest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	proxy_set_header X-Forwarded-Proto "https";
	proxy_set_header X-Forwarded-Port 443;

        location / {

                proxy_pass http://k8s;
        }

    listen 443 ssl http2;
    #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
	ssl_prefer_server_ciphers on;
	add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        ssl_stapling on;
        ssl_stapling_verify on;
	    ssl_trusted_certificate ssl/ca.crt;

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
	ssl_certificate ssl/agent3.crt;
	ssl_certificate_key ssl/agent3.key;
}

server {
        server_name homewikitest.server.com;

        access_log /var/log/nginx/homewikitest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
#        proxy_set_header Host homewiki.k8stest.server.com;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {

                proxy_pass http://k8s;
        }

    listen 443 ssl http2;
    #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
	ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
	ssl_prefer_server_ciphers on;
	add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate ssl/ca.crt;

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
	ssl_certificate ssl/agent1.crt;
	ssl_certificate_key ssl/agent1.key;
}

server {
        server_name p2ptest.server.com;
        access_log /var/log/nginx/p2p-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
                proxy_pass http://k8s;
        }

    listen 443 ssl http2;
	ssl_certificate ssl/agent2.crt;
	ssl_certificate_key ssl/agent2.key;

#    include /etc/letsencrypt/options-ssl-nginx.conf;
	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate ssl/ca.crt;

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
}

server {
        listen 0.0.0.0:80;
        server_name webmail.test.server.com;

        listen 0.0.0.0:443 ssl http2;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";
        ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;

	    ssl_protocols TLSv1.2 TLSv1.3;
        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate ssl/ca.crt;

        access_log /var/log/nginx/webmail.test.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;

        proxy_set_header Host roundcube.k8stest.server.com;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
                proxy_pass http://k8s;
        }

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }


	ssl_certificate ssl/agent3.crt;
	ssl_certificate_key ssl/agent3.key;
}

server {
        listen 0.0.0.0:80;
        server_name old-ways.test.server.com;

        listen 0.0.0.0:443 ssl http2;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;

	ssl_protocols TLSv1.2 TLSv1.3;
        ssl_stapling on;
        ssl_stapling_verify on;

        access_log /var/log/nginx/old-ways.test.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
                proxy_pass http://apache-backend;
        }

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
	ssl_certificate ssl/agent3.crt;
	ssl_certificate_key ssl/agent3.key;

}

server {
        listen 0.0.0.0:80;
        server_name mail.test.server.com;

        location ~ /(.*)$ {
                rewrite ^ http://test.server.com permanent;
        }

    listen 443 ssl http2;
    #include /etc/letsencrypt/options-ssl-nginx.conf;
    #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

    # Redirect non-https traffic to https
    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }

	ssl_certificate ssl/agent1.crt;
	ssl_certificate_key ssl/agent1.key;
}
server {
        server_name something.test.server.com;

        access_log /var/log/nginx/something.test.server.com-access.log combined;

        client_max_body_size 400m;
        client_body_timeout 3600;
        send_timeout 180;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        #Only cache 200 responses, and for a default of 20 minutes.
        proxy_cache_valid 200 20m;

        location / {
          allow 192.168.1.0/24;
          deny all;

                        # If logged in, don't cache.
                        if ($http_cookie ~* "comment_author_|wordpress_(?!test_cookie)|wp-postpass_" ) {
                                set $do_not_cache 1;
                        }

                        proxy_pass http://apache-backend;
        }

        location ~* wp\-login\.php {
          allow 192.168.1.0/24;
          deny all;

               proxy_pass http://apache-backend;
        }

        location ~* wp\-.*\.php|wp\-admin {
          allow 192.168.1.0/24;
          deny all;

                        # Don't static file cache admin-looking things.
                        proxy_pass http://apache-backend;
        }

        location ~* \.(jpg|png|gif|jpeg|js|mp3|wav|swf|mov|doc|pdf|xls|ppt|docx|pptx|xlsx)$ {
          allow 192.168.1.0/24;
          deny all;

                        proxy_pass http://apache-backend;

        }

        location = /50x.html {
          allow 192.168.1.0/24;
          deny all;

        }

        # No access to .htaccess files.
        location ~ /\.ht {
                deny all;
        }

#############################

    listen 443 ssl http2;
	ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
	ssl_prefer_server_ciphers on;
    add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";
    #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

   if ($scheme != "https") {
       return 301 https://$host$request_uri;
    }

	ssl_certificate ssl/agent2.crt;
	ssl_certificate_key ssl/agent2.key;
}

server {
        listen 0.0.0.0:80;
        server_name test.server.com;

        access_log /var/log/nginx/test.server.com-access.log combined;

        client_max_body_size 16m;
        client_body_timeout 3600;
        send_timeout 180;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        #Only cache 200 responses, and for a default of 20 minutes.
        proxy_cache_valid 200 20m;

        location / {
                        # If logged in, don't cache.
                        if ($http_cookie ~* "comment_author_|wordpress_(?!test_cookie)|wp-postpass_" ) {
                                set $do_not_cache 1;
                        }
                        proxy_cache_key "$scheme://$host$request_uri $do_not_cache";
                        proxy_cache staticfilecache;
                        proxy_pass http://apache-backend;
        }

        location ~* wp\-login\.php {
               proxy_pass http://apache-backend;
        }

        location ~* wp\-.*\.php|wp\-admin {
                        # Don't static file cache admin-looking things.
                        proxy_pass http://apache-backend;
        }

        location ~* \.(jpg|png|gif|jpeg|js|mp3|wav|swf|mov|doc|pdf|xls|ppt|docx|pptx|xlsx)$ {
                        # Cache static-looking files for 120 minutes, setting a 10 day expiry time in the HTTP header,
                        # whether logged in or not (may be too heavy-handed).
                        proxy_cache_valid 200 120m;
                        expires 864000;
                        proxy_pass http://apache-backend;
                        proxy_cache staticfilecache;
        }


        location = /50x.html {
        }

        # No access to .htaccess files.
        location ~ /\.ht {
                deny all;
        }

#############################

    listen 443 ssl http2;
#    include /etc/letsencrypt/options-ssl-nginx.conf;
	ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
	ssl_prefer_server_ciphers on;
    add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";
    #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
#    add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

#    if ($scheme != "https") {
#        return 301 https://$host$request_uri;
#    }
	ssl_certificate ssl/agent1.crt;
	ssl_certificate_key ssl/agent1.key;
}

server {
        server_name www.test.server.com;

	location / {
	    rewrite ^/(.*) $scheme://test.server.com/$1 permanent;
	}

    listen 443 ssl http2;
	ssl_certificate ssl/agent2.crt;
	ssl_certificate_key ssl/agent2.key;
    #include /etc/letsencrypt/options-ssl-nginx.conf;
    #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

}

server {
    if ($host = www.test.server.com) {
        return 301 https://$host$request_uri;
    }


        listen 0.0.0.0:80;
        server_name www.test.server.com;
    return 404;
}

server {
    if ($host = postfixadmintest.server.com) {
        return 301 https://$host$request_uri;
    }


        listen 0.0.0.0:80;
        server_name postfixadmintest.server.com;
    return 404;
}

server {
        server_name ssotest.server.com;

        access_log /var/log/nginx/ssotest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	proxy_set_header X-Forwarded-Proto https;
	proxy_set_header X-Forwarded-Port 443;

	error_page   403  /error403.html;
	location = /error403.html {
		return 200 '';
	}

        location ~ /auth/admin {
          allow 192.168.1.0/24;
          allow 10.0.0.0/8;
          deny all;
          proxy_pass http://k8s;
        }

        location / {
          proxy_pass http://k8s;
        }

    listen 443 ssl http2;

	ssl_stapling on;
	ssl_stapling_verify on;

	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }

	ssl_certificate ssl/agent3.crt;
	ssl_certificate_key ssl/agent3.key;
}



server {
    if ($host = finder.server.com) {
        return 301 https://$host$request_uri;
    }


        listen 0.0.0.0:80;
        server_name finder.server.com;
    return 404;


}}


http { 
    limit_conn_zone $binary_remote_addr zone=perip:10m;
    limit_conn_zone $server_name zone=perserver:10m;

    server_names_hash_bucket_size 64;
    server_tokens off; 
    more_set_headers 'Server: hidden';
    include       mime.types; 
    default_type  application/octet-stream; 
    access_log  testdata/configs/accesslogs/access.log; 
    client_body_temp_path /usr/local/nginx/body 1 2; 
    gzip_buffers 32 8k; 
    sendfile        on; 
    keepalive_timeout  65; 
    tcp_nodelay        on;
    #gzipping lets you serve more requests quicker. 
    gzip  on;
    #gzip_types text/html application/x-javascript application/javascript text/javascript text/css text/xml application/atom+xml application/xml;
    gzip_types application/x-javascript application/javascript text/javascript text/css text/xml application/atom+xml application/xml;

    ssl_session_cache shared:SSL:1m; # holds approx 4000 sessions
    ssl_session_timeout 1h; # 1 hour during which sessions can be re-used.
    ssl_session_tickets on;

    include location/*.conf;

# set some parameters: two levels deep for the filesystem 
# set the name of the cache to "staticfilecache", giving it a maximum cache time of 3 hours and 500meg in size. 
proxy_cache_path  /usr/local/nginx/cache  levels=1:2   keys_zone=staticfilecache:180m  max_size=500m; 
proxy_temp_path /usr/local/nginx/proxy; 
proxy_connect_timeout 30; 
proxy_read_timeout 120; 
proxy_send_timeout 120; 

#IMPORTANT - this sets the basic cache key that's used in the static file cache. 
proxy_cache_key "$scheme://$host$request_uri"; 

upstream apache-backend { 
        ip_hash;
        server 127.0.0.1:9080 fail_timeout=10s;
}

upstream k8s {
	ip_hash;
	server test.demolab.com:80 fail_timeout=10s;
	server dns.demolab.com:80 fail_timeout=10s;
}

upstream k8s-registry {
	ip_hash;
	server test.demolab.com:31005 fail_timeout=10s;
	server dns.demolab.com:31005 fail_timeout=10s;
}

upstream k8s-dashboard {
	ip_hash;
	server test.demolab.com:30443 fail_timeout=10s;
	server dns.demolab.com:30443 fail_timeout=10s;
}

upstream alarm {
	ip_hash;
	server 192.168.1.9:80 fail_timeout=10s;
}

upstream camera1 {
	ip_hash;
	server test.demolab.com fail_timeout=10s;
}
upstream camera2 {
	ip_hash;
	server test.demolab.com fail_timeout=10s;
}
upstream camera3 {
	ip_hash;
	server test.demolab.com fail_timeout=10s;
}
upstream camera4 {
	ip_hash;
	server test.demolab.com fail_timeout=10s;
}
upstream camera5 {
	ip_hash;
	server test.demolab.com fail_timeout=10s;
}

upstream rpi-octoprint {
	ip_hash;
	server test.demolab.com:80 fail_timeout=10s;
}

server {
	listen *:80 default_server deferred;
	server_name _;
	return 444;

        access_log /var/log/nginx/default-access.log combined;

        listen 0.0.0.0:443 ssl http2;
	# openssl req -x509 -nodes -days 3650 -newkey rsa:2048 -keyout /etc/nginx/ssl/nginx.key -out /etc/nginx/ssl/nginx.crt
	ssl_certificate ssl/agent2.crt;
	ssl_certificate_key ssl/agent2.key;
}

server {
        listen 0.0.0.0:443 ssl http2;
        server_name intranettest.server.com;

	ssl_certificate ssl/agent3.crt;
	ssl_certificate_key ssl/agent3.key;

	ssl_stapling on;
	ssl_stapling_verify on;
	ssl_trusted_certificate ssl/ca.crt;
	ssl_ecdh_curve auto;

	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
	ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        access_log /var/log/nginx/intranettest.server.com-access.log combined;
        error_log /var/log/nginx/intranettest.server.com-error.log;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

	location /nginx_status {

          stub_status on;
          access_log   off;
          allow 192.168.1.0/24;
          deny all;
        }

        location / {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://apache-backend;
        }

	location /camera1 {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://camera1/cgi-bin/CGIProxy.fcgi?cmd=snapPicture;
	}
	location /camera2 {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://camera2/cgi-bin/CGIProxy.fcgi?cmd=snapPicture;
	}
	location /camera3 {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://camera3/cgi-bin/CGIProxy.fcgi?cmd=snapPicture;
	}
	location /camera4 {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://camera4/cgi-bin/CGIProxy.fcgi?cmd=snapPicture;
	}
	location /camera5 {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://camera5/cgi-bin/CGIProxy.fcgi?cmd=snapPicture;
	}
	location /alarm/ {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://alarm/alarm/;
	}
}

server {

        listen 0.0.0.0:443 ssl http2;
        server_name finder.server.com;

	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
	ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        access_log /var/log/nginx/finder.server.com-access.log combined;
        error_log /var/log/nginx/finder.server.com-error.log;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;


	location ~ / {
		proxy_pass http://k8s;
	}
	ssl_certificate ssl/agent1.crt;
	ssl_certificate_key ssl/agent1.key;

	ssl_stapling on;
	ssl_stapling_verify on;
	ssl_trusted_certificate ssl/ca.crt;	

}

server {
        listen 0.0.0.0:443 ssl http2;
        server_name webmailtest.server.com;
        ssl_certificate ssl/agent1.crt;
        ssl_certificate_key ssl/agent1.key;

        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate ssl/ca.crt;	

	    ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        access_log /var/log/nginx/webmailtest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;

        proxy_set_header Host roundcube.k8stest.server.com;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
                proxy_pass http://k8s;
        }

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
}

server {
        listen 0.0.0.0:80;
        server_name admin.server.com;

        access_log /var/log/nginx/admin.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://apache-backend;
        }

    listen 443 ssl http2;
	ssl_certificate ssl/agent2.crt;
	ssl_certificate_key ssl/agent2.key;

	ssl_stapling on;
	ssl_stapling_verify on;
	ssl_trusted_certificate ssl/ca.crt;	

	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }

}

server {
        server_name postfixadmintest.server.com;

        access_log /var/log/nginx/postfixadmintest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://apache-backend;
        }

    listen 443 ssl http2;
#ssl_certificate /etc/letsencrypt/live/admin.server.com/fullchain.pem;
#ssl_certificate_key /etc/letsencrypt/live/admin.server.com/privkey.pem;

	ssl_stapling on;
	ssl_stapling_verify on;
	ssl_trusted_certificate ssl/ca.crt;

	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }

	ssl_certificate ssl/agent3.crt;
	ssl_certificate_key ssl/agent3.key;
}

server {
        server_name hometest.server.com;

        access_log /var/log/nginx/hometest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        #proxy_set_header Host openhab.k8stest.server.com;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	proxy_set_header X-Forwarded-Proto "https";
	proxy_set_header X-Forwarded-Port 443;

        location / {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;
                proxy_pass http://k8s;
        }

    listen 443 ssl http2;

	ssl_stapling on;
	ssl_stapling_verify on;

	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
	ssl_certificate ssl/agent1.crt;
	ssl_certificate_key ssl/agent1.key;
}

server {
        server_name piholetest.server.com;

        access_log /var/log/nginx/hometest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	proxy_set_header X-Forwarded-Proto "https";
	proxy_set_header X-Forwarded-Port 443;

        location / {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;
                proxy_pass http://k8s;
        }

    listen 443 ssl http2;

	ssl_stapling on;
	ssl_stapling_verify on;

	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }


	ssl_certificate ssl/agent2.crt;
	ssl_certificate_key ssl/agent2.key;
}

server {
	listen 0.0.0.0:80;
	server_name webmailtest.server.com intranettest.server.com;

	location / {
		rewrite (.*)$ https://$host$1 last;
	}
}

server {
        listen 0.0.0.0:80;
        server_name grafanatest.server.com;

        access_log /var/log/nginx/grafanatest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {


                proxy_pass http://k8s;
        }

    listen 443 ssl http2;
	ssl_certificate ssl/agent3.crt;
	ssl_certificate_key ssl/agent3.key;
    
#    include /etc/letsencrypt/options-ssl-nginx.conf;
	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate ssl/ca.crt;

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }

}

server {
        listen 0.0.0.0:80;
        server_name registrytest.server.com;

        access_log /var/log/nginx/registrytest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host registry.k8stest.server.com;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
          allow 192.168.1.0/24;
          allow 10.0.0.0/8;
          deny all;

          proxy_pass http://k8s-registry;
        }

    listen 443 ssl http2;
#    include /etc/letsencrypt/options-ssl-nginx.conf;
	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        ssl_stapling on;
        ssl_stapling_verify on;

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
	ssl_certificate ssl/agent1.crt;
	ssl_certificate_key ssl/agent1.key;
}

server {
        listen 0.0.0.0:80;
        server_name k8s-dashboardtest.server.com;

        access_log /var/log/nginx/k8s-dashboardtest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host dashboard.k8stest.server.com;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
          allow 192.168.1.0/24;
          allow 10.0.0.0/8;
          deny all;

          proxy_pass https://k8s-dashboard;
        }

    listen 443 ssl http2;
#    include /etc/letsencrypt/options-ssl-nginx.conf;
	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        ssl_stapling on;
        ssl_stapling_verify on;

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }

	ssl_certificate ssl/agent2.crt;
	ssl_certificate_key ssl/agent2.key;
}

server {
        listen 0.0.0.0:80;
        server_name prometheustest.server.com;

        access_log /var/log/nginx/prometheustest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host prometheus.k8stest.server.com;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://k8s;
        }

    listen 443 ssl http2;
	ssl_certificate ssl/agent3.crt;
	ssl_certificate_key ssl/agent3.key;
	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate ssl/ca.crt;

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }

}

server {
        server_name octoprinttest.server.com;

        access_log /var/log/nginx/octoprinttest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://rpi-octoprint;

		allow 192.168.1.0/24;
		deny all;
        }

    listen 443 ssl http2;
	ssl_certificate ssl/agent1.crt;
	ssl_certificate_key ssl/agent1.key;
    #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
	ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
	ssl_prefer_server_ciphers on;
	add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        ssl_stapling on;
        ssl_stapling_verify on;
	    ssl_trusted_certificate ssl/ca.crt;

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
}

server {
	listen 0.0.0.0:80;
	server_name mailtest.server.com;

        location ~ /(.*)$ {
                rewrite ^ http://wwwtest.server.com permanent;
        }

    listen 443 ssl http2;
	ssl_certificate ssl/agent2.crt;
	ssl_certificate_key ssl/agent2.key;
#    include /etc/letsencrypt/options-ssl-nginx.conf;

        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate ssl/ca.crt;

        ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

    # Redirect non-https traffic to https
    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
}

server {
        server_name wikitest.server.com;

        access_log /var/log/nginx/wikitest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	proxy_set_header X-Forwarded-Proto "https";
	proxy_set_header X-Forwarded-Port 443;

        location / {

                proxy_pass http://k8s;
        }

    listen 443 ssl http2;
    #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
	ssl_prefer_server_ciphers on;
	add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        ssl_stapling on;
        ssl_stapling_verify on;
	    ssl_trusted_certificate ssl/ca.crt;

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
	ssl_certificate ssl/agent3.crt;
	ssl_certificate_key ssl/agent3.key;
}

server {
        server_name homewikitest.server.com;

        access_log /var/log/nginx/homewikitest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
#        proxy_set_header Host homewiki.k8stest.server.com;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {

                proxy_pass http://k8s;
        }

    listen 443 ssl http2;
    #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
	ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
	ssl_prefer_server_ciphers on;
	add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate ssl/ca.crt;

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
	ssl_certificate ssl/agent1.crt;
	ssl_certificate_key ssl/agent1.key;
}

server {
        server_name p2ptest.server.com;
        access_log /var/log/nginx/p2p-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
                proxy_pass http://k8s;
        }

    listen 443 ssl http2;
	ssl_certificate ssl/agent2.crt;
	ssl_certificate_key ssl/agent2.key;

#    include /etc/letsencrypt/options-ssl-nginx.conf;
	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate ssl/ca.crt;

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
}

server {
        listen 0.0.0.0:80;
        server_name webmail.test.server.com;

        listen 0.0.0.0:443 ssl http2;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";
        ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;

	    ssl_protocols TLSv1.2 TLSv1.3;
        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate ssl/ca.crt;

        access_log /var/log/nginx/webmail.test.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;

        proxy_set_header Host roundcube.k8stest.server.com;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
                proxy_pass http://k8s;
        }

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }


	ssl_certificate ssl/agent3.crt;
	ssl_certificate_key ssl/agent3.key;
}

server {
        listen 0.0.0.0:80;
        server_name old-ways.test.server.com;

        listen 0.0.0.0:443 ssl http2;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;

	ssl_protocols TLSv1.2 TLSv1.3;
        ssl_stapling on;
        ssl_stapling_verify on;

        access_log /var/log/nginx/old-ways.test.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
                proxy_pass http://apache-backend;
        }

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
	ssl_certificate ssl/agent3.crt;
	ssl_certificate_key ssl/agent3.key;

}

server {
        listen 0.0.0.0:80;
        server_name mail.test.server.com;

        location ~ /(.*)$ {
                rewrite ^ http://test.server.com permanent;
        }

    listen 443 ssl http2;
    #include /etc/letsencrypt/options-ssl-nginx.conf;
    #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

    # Redirect non-https traffic to https
    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }

	ssl_certificate ssl/agent1.crt;
	ssl_certificate_key ssl/agent1.key;
}
server {
        server_name something.test.server.com;

        access_log /var/log/nginx/something.test.server.com-access.log combined;

        client_max_body_size 400m;
        client_body_timeout 3600;
        send_timeout 180;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        #Only cache 200 responses, and for a default of 20 minutes.
        proxy_cache_valid 200 20m;

        location / {
          allow 192.168.1.0/24;
          deny all;

                        # If logged in, don't cache.
                        if ($http_cookie ~* "comment_author_|wordpress_(?!test_cookie)|wp-postpass_" ) {
                                set $do_not_cache 1;
                        }

                        proxy_pass http://apache-backend;
        }

        location ~* wp\-login\.php {
          allow 192.168.1.0/24;
          deny all;

               proxy_pass http://apache-backend;
        }

        location ~* wp\-.*\.php|wp\-admin {
          allow 192.168.1.0/24;
          deny all;

                        # Don't static file cache admin-looking things.
                        proxy_pass http://apache-backend;
        }

        location ~* \.(jpg|png|gif|jpeg|js|mp3|wav|swf|mov|doc|pdf|xls|ppt|docx|pptx|xlsx)$ {
          allow 192.168.1.0/24;
          deny all;

                        proxy_pass http://apache-backend;

        }

        location = /50x.html {
          allow 192.168.1.0/24;
          deny all;

        }

        # No access to .htaccess files.
        location ~ /\.ht {
                deny all;
        }

#############################

    listen 443 ssl http2;
	ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
	ssl_prefer_server_ciphers on;
    add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";
    #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

   if ($scheme != "https") {
       return 301 https://$host$request_uri;
    }

	ssl_certificate ssl/agent2.crt;
	ssl_certificate_key ssl/agent2.key;
}

server {
        listen 0.0.0.0:80;
        server_name test.server.com;

        access_log /var/log/nginx/test.server.com-access.log combined;

        client_max_body_size 16m;
        client_body_timeout 3600;
        send_timeout 180;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        #Only cache 200 responses, and for a default of 20 minutes.
        proxy_cache_valid 200 20m;

        location / {
                        # If logged in, don't cache.
                        if ($http_cookie ~* "comment_author_|wordpress_(?!test_cookie)|wp-postpass_" ) {
                                set $do_not_cache 1;
                        }
                        proxy_cache_key "$scheme://$host$request_uri $do_not_cache";
                        proxy_cache staticfilecache;
                        proxy_pass http://apache-backend;
        }

        location ~* wp\-login\.php {
               proxy_pass http://apache-backend;
        }

        location ~* wp\-.*\.php|wp\-admin {
                        # Don't static file cache admin-looking things.
                        proxy_pass http://apache-backend;
        }

        location ~* \.(jpg|png|gif|jpeg|js|mp3|wav|swf|mov|doc|pdf|xls|ppt|docx|pptx|xlsx)$ {
                        # Cache static-looking files for 120 minutes, setting a 10 day expiry time in the HTTP header,
                        # whether logged in or not (may be too heavy-handed).
                        proxy_cache_valid 200 120m;
                        expires 864000;
                        proxy_pass http://apache-backend;
                        proxy_cache staticfilecache;
        }


        location = /50x.html {
        }

        # No access to .htaccess files.
        location ~ /\.ht {
                deny all;
        }

#############################

    listen 443 ssl http2;
#    include /etc/letsencrypt/options-ssl-nginx.conf;
	ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
	ssl_prefer_server_ciphers on;
    add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";
    #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
#    add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

#    if ($scheme != "https") {
#        return 301 https://$host$request_uri;
#    }
	ssl_certificate ssl/agent1.crt;
	ssl_certificate_key ssl/agent1.key;
}

server {
        server_name www.test.server.com;

	location / {
	    rewrite ^/(.*) $scheme://test.server.com/$1 permanent;
	}

    listen 443 ssl http2;
	ssl_certificate ssl/agent2.crt;
	ssl_certificate_key ssl/agent2.key;
    #include /etc/letsencrypt/options-ssl-nginx.conf;
    #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

}

server {
    if ($host = www.test.server.com) {
        return 301 https://$host$request_uri;
    }


        listen 0.0.0.0:80;
        server_name www.test.server.com;
    return 404;
}

server {
    if ($host = postfixadmintest.server.com) {
        return 301 https://$host$request_uri;
    }


        listen 0.0.0.0:80;
        server_name postfixadmintest.server.com;
    return 404;
}

server {
        server_name ssotest.server.com;

        access_log /var/log/nginx/ssotest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	proxy_set_header X-Forwarded-Proto https;
	proxy_set_header X-Forwarded-Port 443;

	error_page   403  /error403.html;
	location = /error403.html {
		return 200 '';
	}

        location ~ /auth/admin {
          allow 192.168.1.0/24;
          allow 10.0.0.0/8;
          deny all;
          proxy_pass http://k8s;
        }

        location / {
          proxy_pass http://k8s;
        }

    listen 443 ssl http2;

	ssl_stapling on;
	ssl_stapling_verify on;

	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }

	ssl_certificate ssl/agent3.crt;
	ssl_certificate_key ssl/agent3.key;
}



server {
    if ($host = finder.server.com) {
        return 301 https://$host$request_uri;
    }


        listen 0.0.0.0:80;
        server_name finder.server.com;
    return 404;


}}



user root; 
worker_processes  8;
error_log  /var/log/nginx/error.log; 
pid        /var/run/nginx.pid; 

load_module /usr/lib/nginx/modules/ngx_http_headers_more_filter_module.so;
load_module /usr/lib/nginx/modules/ngx_http_naxsi_module.so; # load naxsi

events { 
    #A maximum of 1024 concurrent connections. 
    worker_connections  1024;
} 

http { 
    limit_conn_zone $binary_remote_addr zone=perip:10m;
    limit_conn_zone $server_name zone=perserver:10m;

    server_names_hash_bucket_size 64;
    server_tokens off; 
    more_set_headers 'Server: hidden';
    include       mime.types; 
    default_type  application/octet-stream; 
    access_log  testdata/configs/accesslogs/access.log; 
    client_body_temp_path /usr/local/nginx/body 1 2; 
    gzip_buffers 32 8k; 
    sendfile        on; 
    keepalive_timeout  65; 
    tcp_nodelay        on;
    #gzipping lets you serve more requests quicker. 
    gzip  on;
    #gzip_types text/html application/x-javascript application/javascript text/javascript text/css text/xml application/atom+xml application/xml;
    gzip_types application/x-javascript application/javascript text/javascript text/css text/xml application/atom+xml application/xml;

    ssl_session_cache shared:SSL:1m; # holds approx 4000 sessions
    ssl_session_timeout 1h; # 1 hour during which sessions can be re-used.
    ssl_session_tickets on;

    include location/*.conf;

# set some parameters: two levels deep for the filesystem 
# set the name of the cache to "staticfilecache", giving it a maximum cache time of 3 hours and 500meg in size. 
proxy_cache_path  /usr/local/nginx/cache  levels=1:2   keys_zone=staticfilecache:180m  max_size=500m; 
proxy_temp_path /usr/local/nginx/proxy; 
proxy_connect_timeout 30; 
proxy_read_timeout 120; 
proxy_send_timeout 120; 

#IMPORTANT - this sets the basic cache key that's used in the static file cache. 
proxy_cache_key "$scheme://$host$request_uri"; 

upstream apache-backend { 
        ip_hash;
        server 127.0.0.1:9080 fail_timeout=10s;
}

upstream k8s {
	ip_hash;
	server test.demolab.com:80 fail_timeout=10s;
	server dns.demolab.com:80 fail_timeout=10s;
}

upstream k8s-registry {
	ip_hash;
	server test.demolab.com:31005 fail_timeout=10s;
	server dns.demolab.com:31005 fail_timeout=10s;
}

upstream k8s-dashboard {
	ip_hash;
	server test.demolab.com:30443 fail_timeout=10s;
	server dns.demolab.com:30443 fail_timeout=10s;
}

upstream alarm {
	ip_hash;
	server 192.168.1.9:80 fail_timeout=10s;
}

upstream camera1 {
	ip_hash;
	server test.demolab.com fail_timeout=10s;
}
upstream camera2 {
	ip_hash;
	server test.demolab.com fail_timeout=10s;
}
upstream camera3 {
	ip_hash;
	server test.demolab.com fail_timeout=10s;
}
upstream camera4 {
	ip_hash;
	server test.demolab.com fail_timeout=10s;
}
upstream camera5 {
	ip_hash;
	server test.demolab.com fail_timeout=10s;
}

upstream rpi-octoprint {
	ip_hash;
	server test.demolab.com:80 fail_timeout=10s;
}

server {
	listen *:80 default_server deferred;
	server_name _;
	return 444;

        access_log /var/log/nginx/default-access.log combined;

        listen 0.0.0.0:443 ssl http2;
	# openssl req -x509 -nodes -days 3650 -newkey rsa:2048 -keyout /etc/nginx/ssl/nginx.key -out /etc/nginx/ssl/nginx.crt
	ssl_certificate ssl/agent2.crt;
	ssl_certificate_key ssl/agent2.key;
}

server {
        listen 0.0.0.0:443 ssl http2;
        server_name intranettest.server.com;

	ssl_certificate ssl/agent3.crt;
	ssl_certificate_key ssl/agent3.key;

	ssl_stapling on;
	ssl_stapling_verify on;
	ssl_trusted_certificate ssl/ca.crt;
	ssl_ecdh_curve auto;

	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
	ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        access_log /var/log/nginx/intranettest.server.com-access.log combined;
        error_log /var/log/nginx/intranettest.server.com-error.log;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

	location /nginx_status {

          stub_status on;
          access_log   off;
          allow 192.168.1.0/24;
          deny all;
        }

        location / {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://apache-backend;
        }

	location /camera1 {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://camera1/cgi-bin/CGIProxy.fcgi?cmd=snapPicture;
	}
	location /camera2 {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://camera2/cgi-bin/CGIProxy.fcgi?cmd=snapPicture;
	}
	location /camera3 {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://camera3/cgi-bin/CGIProxy.fcgi?cmd=snapPicture;
	}
	location /camera4 {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://camera4/cgi-bin/CGIProxy.fcgi?cmd=snapPicture;
	}
	location /camera5 {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://camera5/cgi-bin/CGIProxy.fcgi?cmd=snapPicture;
	}
	location /alarm/ {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://alarm/alarm/;
	}
}

server {

        listen 0.0.0.0:443 ssl http2;
        server_name finder.server.com;

	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
	ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        access_log /var/log/nginx/finder.server.com-access.log combined;
        error_log /var/log/nginx/finder.server.com-error.log;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;


	location ~ / {
		proxy_pass http://k8s;
	}
	ssl_certificate ssl/agent1.crt;
	ssl_certificate_key ssl/agent1.key;

	ssl_stapling on;
	ssl_stapling_verify on;
	ssl_trusted_certificate ssl/ca.crt;	

}

server {
        listen 0.0.0.0:443 ssl http2;
        server_name webmailtest.server.com;
        ssl_certificate ssl/agent1.crt;
        ssl_certificate_key ssl/agent1.key;

        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate ssl/ca.crt;	

	    ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        access_log /var/log/nginx/webmailtest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;

        proxy_set_header Host roundcube.k8stest.server.com;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
                proxy_pass http://k8s;
        }

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
}

server {
        listen 0.0.0.0:80;
        server_name admin.server.com;

        access_log /var/log/nginx/admin.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://apache-backend;
        }

    listen 443 ssl http2;
	ssl_certificate ssl/agent2.crt;
	ssl_certificate_key ssl/agent2.key;

	ssl_stapling on;
	ssl_stapling_verify on;
	ssl_trusted_certificate ssl/ca.crt;	

	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }

}

server {
        server_name postfixadmintest.server.com;

        access_log /var/log/nginx/postfixadmintest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://apache-backend;
        }

    listen 443 ssl http2;
#ssl_certificate /etc/letsencrypt/live/admin.server.com/fullchain.pem;
#ssl_certificate_key /etc/letsencrypt/live/admin.server.com/privkey.pem;

	ssl_stapling on;
	ssl_stapling_verify on;
	ssl_trusted_certificate ssl/ca.crt;

	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }

	ssl_certificate ssl/agent3.crt;
	ssl_certificate_key ssl/agent3.key;
}

server {
        server_name hometest.server.com;

        access_log /var/log/nginx/hometest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        #proxy_set_header Host openhab.k8stest.server.com;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	proxy_set_header X-Forwarded-Proto "https";
	proxy_set_header X-Forwarded-Port 443;

        location / {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;
                proxy_pass http://k8s;
        }

    listen 443 ssl http2;

	ssl_stapling on;
	ssl_stapling_verify on;

	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
	ssl_certificate ssl/agent1.crt;
	ssl_certificate_key ssl/agent1.key;
}

server {
        server_name piholetest.server.com;

        access_log /var/log/nginx/hometest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	proxy_set_header X-Forwarded-Proto "https";
	proxy_set_header X-Forwarded-Port 443;

        location / {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;
                proxy_pass http://k8s;
        }

    listen 443 ssl http2;

	ssl_stapling on;
	ssl_stapling_verify on;

	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }


	ssl_certificate ssl/agent2.crt;
	ssl_certificate_key ssl/agent2.key;
}

server {
	listen 0.0.0.0:80;
	server_name webmailtest.server.com intranettest.server.com;

	location / {
		rewrite (.*)$ https://$host$1 last;
	}
}

server {
        listen 0.0.0.0:80;
        server_name grafanatest.server.com;

        access_log /var/log/nginx/grafanatest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {


                proxy_pass http://k8s;
        }

    listen 443 ssl http2;
	ssl_certificate ssl/agent3.crt;
	ssl_certificate_key ssl/agent3.key;
    
#    include /etc/letsencrypt/options-ssl-nginx.conf;
	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate ssl/ca.crt;

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }

}

server {
        listen 0.0.0.0:80;
        server_name registrytest.server.com;

        access_log /var/log/nginx/registrytest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host registry.k8stest.server.com;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
          allow 192.168.1.0/24;
          allow 10.0.0.0/8;
          deny all;

          proxy_pass http://k8s-registry;
        }

    listen 443 ssl http2;
#    include /etc/letsencrypt/options-ssl-nginx.conf;
	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        ssl_stapling on;
        ssl_stapling_verify on;

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
	ssl_certificate ssl/agent1.crt;
	ssl_certificate_key ssl/agent1.key;
}

server {
        listen 0.0.0.0:80;
        server_name k8s-dashboardtest.server.com;

        access_log /var/log/nginx/k8s-dashboardtest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host dashboard.k8stest.server.com;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
          allow 192.168.1.0/24;
          allow 10.0.0.0/8;
          deny all;

          proxy_pass https://k8s-dashboard;
        }

    listen 443 ssl http2;
#    include /etc/letsencrypt/options-ssl-nginx.conf;
	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        ssl_stapling on;
        ssl_stapling_verify on;

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }

	ssl_certificate ssl/agent2.crt;
	ssl_certificate_key ssl/agent2.key;
}

server {
        listen 0.0.0.0:80;
        server_name prometheustest.server.com;

        access_log /var/log/nginx/prometheustest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host prometheus.k8stest.server.com;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://k8s;
        }

    listen 443 ssl http2;
	ssl_certificate ssl/agent3.crt;
	ssl_certificate_key ssl/agent3.key;
	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate ssl/ca.crt;

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }

}

server {
        server_name octoprinttest.server.com;

        access_log /var/log/nginx/octoprinttest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://rpi-octoprint;

		allow 192.168.1.0/24;
		deny all;
        }

    listen 443 ssl http2;
	ssl_certificate ssl/agent1.crt;
	ssl_certificate_key ssl/agent1.key;
    #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
	ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
	ssl_prefer_server_ciphers on;
	add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        ssl_stapling on;
        ssl_stapling_verify on;
	    ssl_trusted_certificate ssl/ca.crt;

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
}

server {
	listen 0.0.0.0:80;
	server_name mailtest.server.com;

        location ~ /(.*)$ {
                rewrite ^ http://wwwtest.server.com permanent;
        }

    listen 443 ssl http2;
	ssl_certificate ssl/agent2.crt;
	ssl_certificate_key ssl/agent2.key;
#    include /etc/letsencrypt/options-ssl-nginx.conf;

        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate ssl/ca.crt;

        ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

    # Redirect non-https traffic to https
    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
}

server {
        server_name wikitest.server.com;

        access_log /var/log/nginx/wikitest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	proxy_set_header X-Forwarded-Proto "https";
	proxy_set_header X-Forwarded-Port 443;

        location / {

                proxy_pass http://k8s;
        }

    listen 443 ssl http2;
    #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
	ssl_prefer_server_ciphers on;
	add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        ssl_stapling on;
        ssl_stapling_verify on;
	    ssl_trusted_certificate ssl/ca.crt;

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
	ssl_certificate ssl/agent3.crt;
	ssl_certificate_key ssl/agent3.key;
}

server {
        server_name homewikitest.server.com;

        access_log /var/log/nginx/homewikitest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
#        proxy_set_header Host homewiki.k8stest.server.com;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {

                proxy_pass http://k8s;
        }

    listen 443 ssl http2;
    #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
	ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
	ssl_prefer_server_ciphers on;
	add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate ssl/ca.crt;

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
	ssl_certificate ssl/agent1.crt;
	ssl_certificate_key ssl/agent1.key;
}

server {
        server_name p2ptest.server.com;
        access_log /var/log/nginx/p2p-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
                proxy_pass http://k8s;
        }

    listen 443 ssl http2;
	ssl_certificate ssl/agent2.crt;
	ssl_certificate_key ssl/agent2.key;

#    include /etc/letsencrypt/options-ssl-nginx.conf;
	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate ssl/ca.crt;

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
}

server {
        listen 0.0.0.0:80;
        server_name webmail.test.server.com;

        listen 0.0.0.0:443 ssl http2;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";
        ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;

	    ssl_protocols TLSv1.2 TLSv1.3;
        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate ssl/ca.crt;

        access_log /var/log/nginx/webmail.test.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;

        proxy_set_header Host roundcube.k8stest.server.com;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
                proxy_pass http://k8s;
        }

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }


	ssl_certificate ssl/agent3.crt;
	ssl_certificate_key ssl/agent3.key;
}

server {
        listen 0.0.0.0:80;
        server_name old-ways.test.server.com;

        listen 0.0.0.0:443 ssl http2;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;

	ssl_protocols TLSv1.2 TLSv1.3;
        ssl_stapling on;
        ssl_stapling_verify on;

        access_log /var/log/nginx/old-ways.test.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
                proxy_pass http://apache-backend;
        }

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
	ssl_certificate ssl/agent3.crt;
	ssl_certificate_key ssl/agent3.key;

}

server {
        listen 0.0.0.0:80;
        server_name mail.test.server.com;

        location ~ /(.*)$ {
                rewrite ^ http://test.server.com permanent;
        }

    listen 443 ssl http2;
    #include /etc/letsencrypt/options-ssl-nginx.conf;
    #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

    # Redirect non-https traffic to https
    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }

	ssl_certificate ssl/agent1.crt;
	ssl_certificate_key ssl/agent1.key;
}
server {
        server_name something.test.server.com;

        access_log /var/log/nginx/something.test.server.com-access.log combined;

        client_max_body_size 400m;
        client_body_timeout 3600;
        send_timeout 180;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        #Only cache 200 responses, and for a default of 20 minutes.
        proxy_cache_valid 200 20m;

        location / {
          allow 192.168.1.0/24;
          deny all;

                        # If logged in, don't cache.
                        if ($http_cookie ~* "comment_author_|wordpress_(?!test_cookie)|wp-postpass_" ) {
                                set $do_not_cache 1;
                        }

                        proxy_pass http://apache-backend;
        }

        location ~* wp\-login\.php {
          allow 192.168.1.0/24;
          deny all;

               proxy_pass http://apache-backend;
        }

        location ~* wp\-.*\.php|wp\-admin {
          allow 192.168.1.0/24;
          deny all;

                        # Don't static file cache admin-looking things.
                        proxy_pass http://apache-backend;
        }

        location ~* \.(jpg|png|gif|jpeg|js|mp3|wav|swf|mov|doc|pdf|xls|ppt|docx|pptx|xlsx)$ {
          allow 192.168.1.0/24;
          deny all;

                        proxy_pass http://apache-backend;

        }

        location = /50x.html {
          allow 192.168.1.0/24;
          deny all;

        }

        # No access to .htaccess files.
        location ~ /\.ht {
                deny all;
        }

#############################

    listen 443 ssl http2;
	ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
	ssl_prefer_server_ciphers on;
    add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";
    #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

   if ($scheme != "https") {
       return 301 https://$host$request_uri;
    }

	ssl_certificate ssl/agent2.crt;
	ssl_certificate_key ssl/agent2.key;
}

server {
        listen 0.0.0.0:80;
        server_name test.server.com;

        access_log /var/log/nginx/test.server.com-access.log combined;

        client_max_body_size 16m;
        client_body_timeout 3600;
        send_timeout 180;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        #Only cache 200 responses, and for a default of 20 minutes.
        proxy_cache_valid 200 20m;

        location / {
                        # If logged in, don't cache.
                        if ($http_cookie ~* "comment_author_|wordpress_(?!test_cookie)|wp-postpass_" ) {
                                set $do_not_cache 1;
                        }
                        proxy_cache_key "$scheme://$host$request_uri $do_not_cache";
                        proxy_cache staticfilecache;
                        proxy_pass http://apache-backend;
        }

        location ~* wp\-login\.php {
               proxy_pass http://apache-backend;
        }

        location ~* wp\-.*\.php|wp\-admin {
                        # Don't static file cache admin-looking things.
                        proxy_pass http://apache-backend;
        }

        location ~* \.(jpg|png|gif|jpeg|js|mp3|wav|swf|mov|doc|pdf|xls|ppt|docx|pptx|xlsx)$ {
                        # Cache static-looking files for 120 minutes, setting a 10 day expiry time in the HTTP header,
                        # whether logged in or not (may be too heavy-handed).
                        proxy_cache_valid 200 120m;
                        expires 864000;
                        proxy_pass http://apache-backend;
                        proxy_cache staticfilecache;
        }


        location = /50x.html {
        }

        # No access to .htaccess files.
        location ~ /\.ht {
                deny all;
        }

#############################

    listen 443 ssl http2;
#    include /etc/letsencrypt/options-ssl-nginx.conf;
	ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
	ssl_prefer_server_ciphers on;
    add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";
    #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
#    add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

#    if ($scheme != "https") {
#        return 301 https://$host$request_uri;
#    }
	ssl_certificate ssl/agent1.crt;
	ssl_certificate_key ssl/agent1.key;
}

server {
        server_name www.test.server.com;

	location / {
	    rewrite ^/(.*) $scheme://test.server.com/$1 permanent;
	}

    listen 443 ssl http2;
	ssl_certificate ssl/agent2.crt;
	ssl_certificate_key ssl/agent2.key;
    #include /etc/letsencrypt/options-ssl-nginx.conf;
    #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

}

server {
    if ($host = www.test.server.com) {
        return 301 https://$host$request_uri;
    }


        listen 0.0.0.0:80;
        server_name www.test.server.com;
    return 404;
}

server {
    if ($host = postfixadmintest.server.com) {
        return 301 https://$host$request_uri;
    }


        listen 0.0.0.0:80;
        server_name postfixadmintest.server.com;
    return 404;
}

server {
        server_name ssotest.server.com;

        access_log /var/log/nginx/ssotest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	proxy_set_header X-Forwarded-Proto https;
	proxy_set_header X-Forwarded-Port 443;

	error_page   403  /error403.html;
	location = /error403.html {
		return 200 '';
	}

        location ~ /auth/admin {
          allow 192.168.1.0/24;
          allow 10.0.0.0/8;
          deny all;
          proxy_pass http://k8s;
        }

        location / {
          proxy_pass http://k8s;
        }

    listen 443 ssl http2;

	ssl_stapling on;
	ssl_stapling_verify on;

	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }

	ssl_certificate ssl/agent3.crt;
	ssl_certificate_key ssl/agent3.key;
}



server {
    if ($host = finder.server.com) {
        return 301 https://$host$request_uri;
    }


        listen 0.0.0.0:80;
        server_name finder.server.com;
    return 404;


}}


http { 
    limit_conn_zone $binary_remote_addr zone=perip:10m;
    limit_conn_zone $server_name zone=perserver:10m;

    server_names_hash_bucket_size 64;
    server_tokens off; 
    more_set_headers 'Server: hidden';
    include       mime.types; 
    default_type  application/octet-stream; 
    access_log  testdata/configs/accesslogs/access.log; 
    client_body_temp_path /usr/local/nginx/body 1 2; 
    gzip_buffers 32 8k; 
    sendfile        on; 
    keepalive_timeout  65; 
    tcp_nodelay        on;
    #gzipping lets you serve more requests quicker. 
    gzip  on;
    #gzip_types text/html application/x-javascript application/javascript text/javascript text/css text/xml application/atom+xml application/xml;
    gzip_types application/x-javascript application/javascript text/javascript text/css text/xml application/atom+xml application/xml;

    ssl_session_cache shared:SSL:1m; # holds approx 4000 sessions
    ssl_session_timeout 1h; # 1 hour during which sessions can be re-used.
    ssl_session_tickets on;

    include location/*.conf;

# set some parameters: two levels deep for the filesystem 
# set the name of the cache to "staticfilecache", giving it a maximum cache time of 3 hours and 500meg in size. 
proxy_cache_path  /usr/local/nginx/cache  levels=1:2   keys_zone=staticfilecache:180m  max_size=500m; 
proxy_temp_path /usr/local/nginx/proxy; 
proxy_connect_timeout 30; 
proxy_read_timeout 120; 
proxy_send_timeout 120; 

#IMPORTANT - this sets the basic cache key that's used in the static file cache. 
proxy_cache_key "$scheme://$host$request_uri"; 

upstream apache-backend { 
        ip_hash;
        server 127.0.0.1:9080 fail_timeout=10s;
}

upstream k8s {
	ip_hash;
	server test.demolab.com:80 fail_timeout=10s;
	server dns.demolab.com:80 fail_timeout=10s;
}

upstream k8s-registry {
	ip_hash;
	server test.demolab.com:31005 fail_timeout=10s;
	server dns.demolab.com:31005 fail_timeout=10s;
}

upstream k8s-dashboard {
	ip_hash;
	server test.demolab.com:30443 fail_timeout=10s;
	server dns.demolab.com:30443 fail_timeout=10s;
}

upstream alarm {
	ip_hash;
	server 192.168.1.9:80 fail_timeout=10s;
}

upstream camera1 {
	ip_hash;
	server test.demolab.com fail_timeout=10s;
}
upstream camera2 {
	ip_hash;
	server test.demolab.com fail_timeout=10s;
}
upstream camera3 {
	ip_hash;
	server test.demolab.com fail_timeout=10s;
}
upstream camera4 {
	ip_hash;
	server test.demolab.com fail_timeout=10s;
}
upstream camera5 {
	ip_hash;
	server test.demolab.com fail_timeout=10s;
}

upstream rpi-octoprint {
	ip_hash;
	server test.demolab.com:80 fail_timeout=10s;
}

server {
	listen *:80 default_server deferred;
	server_name _;
	return 444;

        access_log /var/log/nginx/default-access.log combined;

        listen 0.0.0.0:443 ssl http2;
	# openssl req -x509 -nodes -days 3650 -newkey rsa:2048 -keyout /etc/nginx/ssl/nginx.key -out /etc/nginx/ssl/nginx.crt
	ssl_certificate ssl/agent2.crt;
	ssl_certificate_key ssl/agent2.key;
}

server {
        listen 0.0.0.0:443 ssl http2;
        server_name intranettest.server.com;

	ssl_certificate ssl/agent3.crt;
	ssl_certificate_key ssl/agent3.key;

	ssl_stapling on;
	ssl_stapling_verify on;
	ssl_trusted_certificate ssl/ca.crt;
	ssl_ecdh_curve auto;

	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
	ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        access_log /var/log/nginx/intranettest.server.com-access.log combined;
        error_log /var/log/nginx/intranettest.server.com-error.log;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

	location /nginx_status {

          stub_status on;
          access_log   off;
          allow 192.168.1.0/24;
          deny all;
        }

        location / {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://apache-backend;
        }

	location /camera1 {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://camera1/cgi-bin/CGIProxy.fcgi?cmd=snapPicture;
	}
	location /camera2 {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://camera2/cgi-bin/CGIProxy.fcgi?cmd=snapPicture;
	}
	location /camera3 {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://camera3/cgi-bin/CGIProxy.fcgi?cmd=snapPicture;
	}
	location /camera4 {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://camera4/cgi-bin/CGIProxy.fcgi?cmd=snapPicture;
	}
	location /camera5 {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://camera5/cgi-bin/CGIProxy.fcgi?cmd=snapPicture;
	}
	location /alarm/ {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://alarm/alarm/;
	}
}

server {

        listen 0.0.0.0:443 ssl http2;
        server_name finder.server.com;

	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
	ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        access_log /var/log/nginx/finder.server.com-access.log combined;
        error_log /var/log/nginx/finder.server.com-error.log;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;


	location ~ / {
		proxy_pass http://k8s;
	}
	ssl_certificate ssl/agent1.crt;
	ssl_certificate_key ssl/agent1.key;

	ssl_stapling on;
	ssl_stapling_verify on;
	ssl_trusted_certificate ssl/ca.crt;	

}

server {
        listen 0.0.0.0:443 ssl http2;
        server_name webmailtest.server.com;
        ssl_certificate ssl/agent1.crt;
        ssl_certificate_key ssl/agent1.key;

        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate ssl/ca.crt;	

	    ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        access_log /var/log/nginx/webmailtest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;

        proxy_set_header Host roundcube.k8stest.server.com;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
                proxy_pass http://k8s;
        }

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
}

server {
        listen 0.0.0.0:80;
        server_name admin.server.com;

        access_log /var/log/nginx/admin.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://apache-backend;
        }

    listen 443 ssl http2;
	ssl_certificate ssl/agent2.crt;
	ssl_certificate_key ssl/agent2.key;

	ssl_stapling on;
	ssl_stapling_verify on;
	ssl_trusted_certificate ssl/ca.crt;	

	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }

}

server {
        server_name postfixadmintest.server.com;

        access_log /var/log/nginx/postfixadmintest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://apache-backend;
        }

    listen 443 ssl http2;
#ssl_certificate /etc/letsencrypt/live/admin.server.com/fullchain.pem;
#ssl_certificate_key /etc/letsencrypt/live/admin.server.com/privkey.pem;

	ssl_stapling on;
	ssl_stapling_verify on;
	ssl_trusted_certificate ssl/ca.crt;

	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }

	ssl_certificate ssl/agent3.crt;
	ssl_certificate_key ssl/agent3.key;
}

server {
        server_name hometest.server.com;

        access_log /var/log/nginx/hometest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        #proxy_set_header Host openhab.k8stest.server.com;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	proxy_set_header X-Forwarded-Proto "https";
	proxy_set_header X-Forwarded-Port 443;

        location / {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;
                proxy_pass http://k8s;
        }

    listen 443 ssl http2;

	ssl_stapling on;
	ssl_stapling_verify on;

	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
	ssl_certificate ssl/agent1.crt;
	ssl_certificate_key ssl/agent1.key;
}

server {
        server_name piholetest.server.com;

        access_log /var/log/nginx/hometest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	proxy_set_header X-Forwarded-Proto "https";
	proxy_set_header X-Forwarded-Port 443;

        location / {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;
                proxy_pass http://k8s;
        }

    listen 443 ssl http2;

	ssl_stapling on;
	ssl_stapling_verify on;

	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }


	ssl_certificate ssl/agent2.crt;
	ssl_certificate_key ssl/agent2.key;
}

server {
	listen 0.0.0.0:80;
	server_name webmailtest.server.com intranettest.server.com;

	location / {
		rewrite (.*)$ https://$host$1 last;
	}
}

server {
        listen 0.0.0.0:80;
        server_name grafanatest.server.com;

        access_log /var/log/nginx/grafanatest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {


                proxy_pass http://k8s;
        }

    listen 443 ssl http2;
	ssl_certificate ssl/agent3.crt;
	ssl_certificate_key ssl/agent3.key;
    
#    include /etc/letsencrypt/options-ssl-nginx.conf;
	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate ssl/ca.crt;

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }

}

server {
        listen 0.0.0.0:80;
        server_name registrytest.server.com;

        access_log /var/log/nginx/registrytest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host registry.k8stest.server.com;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
          allow 192.168.1.0/24;
          allow 10.0.0.0/8;
          deny all;

          proxy_pass http://k8s-registry;
        }

    listen 443 ssl http2;
#    include /etc/letsencrypt/options-ssl-nginx.conf;
	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        ssl_stapling on;
        ssl_stapling_verify on;

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
	ssl_certificate ssl/agent1.crt;
	ssl_certificate_key ssl/agent1.key;
}

server {
        listen 0.0.0.0:80;
        server_name k8s-dashboardtest.server.com;

        access_log /var/log/nginx/k8s-dashboardtest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host dashboard.k8stest.server.com;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
          allow 192.168.1.0/24;
          allow 10.0.0.0/8;
          deny all;

          proxy_pass https://k8s-dashboard;
        }

    listen 443 ssl http2;
#    include /etc/letsencrypt/options-ssl-nginx.conf;
	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        ssl_stapling on;
        ssl_stapling_verify on;

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }

	ssl_certificate ssl/agent2.crt;
	ssl_certificate_key ssl/agent2.key;
}

server {
        listen 0.0.0.0:80;
        server_name prometheustest.server.com;

        access_log /var/log/nginx/prometheustest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host prometheus.k8stest.server.com;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://k8s;
        }

    listen 443 ssl http2;
	ssl_certificate ssl/agent3.crt;
	ssl_certificate_key ssl/agent3.key;
	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate ssl/ca.crt;

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }

}

server {
        server_name octoprinttest.server.com;

        access_log /var/log/nginx/octoprinttest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://rpi-octoprint;

		allow 192.168.1.0/24;
		deny all;
        }

    listen 443 ssl http2;
	ssl_certificate ssl/agent1.crt;
	ssl_certificate_key ssl/agent1.key;
    #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
	ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
	ssl_prefer_server_ciphers on;
	add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        ssl_stapling on;
        ssl_stapling_verify on;
	    ssl_trusted_certificate ssl/ca.crt;

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
}

server {
	listen 0.0.0.0:80;
	server_name mailtest.server.com;

        location ~ /(.*)$ {
                rewrite ^ http://wwwtest.server.com permanent;
        }

    listen 443 ssl http2;
	ssl_certificate ssl/agent2.crt;
	ssl_certificate_key ssl/agent2.key;
#    include /etc/letsencrypt/options-ssl-nginx.conf;

        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate ssl/ca.crt;

        ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

    # Redirect non-https traffic to https
    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
}

server {
        server_name wikitest.server.com;

        access_log /var/log/nginx/wikitest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	proxy_set_header X-Forwarded-Proto "https";
	proxy_set_header X-Forwarded-Port 443;

        location / {

                proxy_pass http://k8s;
        }

    listen 443 ssl http2;
    #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
	ssl_prefer_server_ciphers on;
	add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        ssl_stapling on;
        ssl_stapling_verify on;
	    ssl_trusted_certificate ssl/ca.crt;

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
	ssl_certificate ssl/agent3.crt;
	ssl_certificate_key ssl/agent3.key;
}

server {
        server_name homewikitest.server.com;

        access_log /var/log/nginx/homewikitest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
#        proxy_set_header Host homewiki.k8stest.server.com;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {

                proxy_pass http://k8s;
        }

    listen 443 ssl http2;
    #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
	ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
	ssl_prefer_server_ciphers on;
	add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate ssl/ca.crt;

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
	ssl_certificate ssl/agent1.crt;
	ssl_certificate_key ssl/agent1.key;
}

server {
        server_name p2ptest.server.com;
        access_log /var/log/nginx/p2p-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
                proxy_pass http://k8s;
        }

    listen 443 ssl http2;
	ssl_certificate ssl/agent2.crt;
	ssl_certificate_key ssl/agent2.key;

#    include /etc/letsencrypt/options-ssl-nginx.conf;
	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate ssl/ca.crt;

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
}

server {
        listen 0.0.0.0:80;
        server_name webmail.test.server.com;

        listen 0.0.0.0:443 ssl http2;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";
        ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;

	    ssl_protocols TLSv1.2 TLSv1.3;
        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate ssl/ca.crt;

        access_log /var/log/nginx/webmail.test.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;

        proxy_set_header Host roundcube.k8stest.server.com;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
                proxy_pass http://k8s;
        }

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }


	ssl_certificate ssl/agent3.crt;
	ssl_certificate_key ssl/agent3.key;
}

server {
        listen 0.0.0.0:80;
        server_name old-ways.test.server.com;

        listen 0.0.0.0:443 ssl http2;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;

	ssl_protocols TLSv1.2 TLSv1.3;
        ssl_stapling on;
        ssl_stapling_verify on;

        access_log /var/log/nginx/old-ways.test.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
                proxy_pass http://apache-backend;
        }

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
	ssl_certificate ssl/agent3.crt;
	ssl_certificate_key ssl/agent3.key;

}

server {
        listen 0.0.0.0:80;
        server_name mail.test.server.com;

        location ~ /(.*)$ {
                rewrite ^ http://test.server.com permanent;
        }

    listen 443 ssl http2;
    #include /etc/letsencrypt/options-ssl-nginx.conf;
    #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

    # Redirect non-https traffic to https
    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }

	ssl_certificate ssl/agent1.crt;
	ssl_certificate_key ssl/agent1.key;
}
server {
        server_name something.test.server.com;

        access_log /var/log/nginx/something.test.server.com-access.log combined;

        client_max_body_size 400m;
        client_body_timeout 3600;
        send_timeout 180;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        #Only cache 200 responses, and for a default of 20 minutes.
        proxy_cache_valid 200 20m;

        location / {
          allow 192.168.1.0/24;
          deny all;

                        # If logged in, don't cache.
                        if ($http_cookie ~* "comment_author_|wordpress_(?!test_cookie)|wp-postpass_" ) {
                                set $do_not_cache 1;
                        }

                        proxy_pass http://apache-backend;
        }

        location ~* wp\-login\.php {
          allow 192.168.1.0/24;
          deny all;

               proxy_pass http://apache-backend;
        }

        location ~* wp\-.*\.php|wp\-admin {
          allow 192.168.1.0/24;
          deny all;

                        # Don't static file cache admin-looking things.
                        proxy_pass http://apache-backend;
        }

        location ~* \.(jpg|png|gif|jpeg|js|mp3|wav|swf|mov|doc|pdf|xls|ppt|docx|pptx|xlsx)$ {
          allow 192.168.1.0/24;
          deny all;

                        proxy_pass http://apache-backend;

        }

        location = /50x.html {
          allow 192.168.1.0/24;
          deny all;

        }

        # No access to .htaccess files.
        location ~ /\.ht {
                deny all;
        }

#############################

    listen 443 ssl http2;
	ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
	ssl_prefer_server_ciphers on;
    add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";
    #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

   if ($scheme != "https") {
       return 301 https://$host$request_uri;
    }

	ssl_certificate ssl/agent2.crt;
	ssl_certificate_key ssl/agent2.key;
}

server {
        listen 0.0.0.0:80;
        server_name test.server.com;

        access_log /var/log/nginx/test.server.com-access.log combined;

        client_max_body_size 16m;
        client_body_timeout 3600;
        send_timeout 180;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        #Only cache 200 responses, and for a default of 20 minutes.
        proxy_cache_valid 200 20m;

        location / {
                        # If logged in, don't cache.
                        if ($http_cookie ~* "comment_author_|wordpress_(?!test_cookie)|wp-postpass_" ) {
                                set $do_not_cache 1;
                        }
                        proxy_cache_key "$scheme://$host$request_uri $do_not_cache";
                        proxy_cache staticfilecache;
                        proxy_pass http://apache-backend;
        }

        location ~* wp\-login\.php {
               proxy_pass http://apache-backend;
        }

        location ~* wp\-.*\.php|wp\-admin {
                        # Don't static file cache admin-looking things.
                        proxy_pass http://apache-backend;
        }

        location ~* \.(jpg|png|gif|jpeg|js|mp3|wav|swf|mov|doc|pdf|xls|ppt|docx|pptx|xlsx)$ {
                        # Cache static-looking files for 120 minutes, setting a 10 day expiry time in the HTTP header,
                        # whether logged in or not (may be too heavy-handed).
                        proxy_cache_valid 200 120m;
                        expires 864000;
                        proxy_pass http://apache-backend;
                        proxy_cache staticfilecache;
        }


        location = /50x.html {
        }

        # No access to .htaccess files.
        location ~ /\.ht {
                deny all;
        }

#############################

    listen 443 ssl http2;
#    include /etc/letsencrypt/options-ssl-nginx.conf;
	ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
	ssl_prefer_server_ciphers on;
    add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";
    #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
#    add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

#    if ($scheme != "https") {
#        return 301 https://$host$request_uri;
#    }
	ssl_certificate ssl/agent1.crt;
	ssl_certificate_key ssl/agent1.key;
}

server {
        server_name www.test.server.com;

	location / {
	    rewrite ^/(.*) $scheme://test.server.com/$1 permanent;
	}

    listen 443 ssl http2;
	ssl_certificate ssl/agent2.crt;
	ssl_certificate_key ssl/agent2.key;
    #include /etc/letsencrypt/options-ssl-nginx.conf;
    #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

}

server {
    if ($host = www.test.server.com) {
        return 301 https://$host$request_uri;
    }


        listen 0.0.0.0:80;
        server_name www.test.server.com;
    return 404;
}

server {
    if ($host = postfixadmintest.server.com) {
        return 301 https://$host$request_uri;
    }


        listen 0.0.0.0:80;
        server_name postfixadmintest.server.com;
    return 404;
}

server {
        server_name ssotest.server.com;

        access_log /var/log/nginx/ssotest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	proxy_set_header X-Forwarded-Proto https;
	proxy_set_header X-Forwarded-Port 443;

	error_page   403  /error403.html;
	location = /error403.html {
		return 200 '';
	}

        location ~ /auth/admin {
          allow 192.168.1.0/24;
          allow 10.0.0.0/8;
          deny all;
          proxy_pass http://k8s;
        }

        location / {
          proxy_pass http://k8s;
        }

    listen 443 ssl http2;

	ssl_stapling on;
	ssl_stapling_verify on;

	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }

	ssl_certificate ssl/agent3.crt;
	ssl_certificate_key ssl/agent3.key;
}



server {
    if ($host = finder.server.com) {
        return 301 https://$host$request_uri;
    }


        listen 0.0.0.0:80;
        server_name finder.server.com;
    return 404;


}}


http { 
    limit_conn_zone $binary_remote_addr zone=perip:10m;
    limit_conn_zone $server_name zone=perserver:10m;

    server_names_hash_bucket_size 64;
    server_tokens off; 
    more_set_headers 'Server: hidden';
    include       mime.types; 
    default_type  application/octet-stream; 
    access_log  testdata/configs/accesslogs/access.log; 
    client_body_temp_path /usr/local/nginx/body 1 2; 
    gzip_buffers 32 8k; 
    sendfile        on; 
    keepalive_timeout  65; 
    tcp_nodelay        on;
    #gzipping lets you serve more requests quicker. 
    gzip  on;
    #gzip_types text/html application/x-javascript application/javascript text/javascript text/css text/xml application/atom+xml application/xml;
    gzip_types application/x-javascript application/javascript text/javascript text/css text/xml application/atom+xml application/xml;

    ssl_session_cache shared:SSL:1m; # holds approx 4000 sessions
    ssl_session_timeout 1h; # 1 hour during which sessions can be re-used.
    ssl_session_tickets on;

    include location/*.conf;

# set some parameters: two levels deep for the filesystem 
# set the name of the cache to "staticfilecache", giving it a maximum cache time of 3 hours and 500meg in size. 
proxy_cache_path  /usr/local/nginx/cache  levels=1:2   keys_zone=staticfilecache:180m  max_size=500m; 
proxy_temp_path /usr/local/nginx/proxy; 
proxy_connect_timeout 30; 
proxy_read_timeout 120; 
proxy_send_timeout 120; 

#IMPORTANT - this sets the basic cache key that's used in the static file cache. 
proxy_cache_key "$scheme://$host$request_uri"; 

upstream apache-backend { 
        ip_hash;
        server 127.0.0.1:9080 fail_timeout=10s;
}

upstream k8s {
	ip_hash;
	server test.demolab.com:80 fail_timeout=10s;
	server dns.demolab.com:80 fail_timeout=10s;
}

upstream k8s-registry {
	ip_hash;
	server test.demolab.com:31005 fail_timeout=10s;
	server dns.demolab.com:31005 fail_timeout=10s;
}

upstream k8s-dashboard {
	ip_hash;
	server test.demolab.com:30443 fail_timeout=10s;
	server dns.demolab.com:30443 fail_timeout=10s;
}

upstream alarm {
	ip_hash;
	server 192.168.1.9:80 fail_timeout=10s;
}

upstream camera1 {
	ip_hash;
	server test.demolab.com fail_timeout=10s;
}
upstream camera2 {
	ip_hash;
	server test.demolab.com fail_timeout=10s;
}
upstream camera3 {
	ip_hash;
	server test.demolab.com fail_timeout=10s;
}
upstream camera4 {
	ip_hash;
	server test.demolab.com fail_timeout=10s;
}
upstream camera5 {
	ip_hash;
	server test.demolab.com fail_timeout=10s;
}

upstream rpi-octoprint {
	ip_hash;
	server test.demolab.com:80 fail_timeout=10s;
}

server {
	listen *:80 default_server deferred;
	server_name _;
	return 444;

        access_log /var/log/nginx/default-access.log combined;

        listen 0.0.0.0:443 ssl http2;
	# openssl req -x509 -nodes -days 3650 -newkey rsa:2048 -keyout /etc/nginx/ssl/nginx.key -out /etc/nginx/ssl/nginx.crt
	ssl_certificate ssl/agent2.crt;
	ssl_certificate_key ssl/agent2.key;
}

server {
        listen 0.0.0.0:443 ssl http2;
        server_name intranettest.server.com;

	ssl_certificate ssl/agent3.crt;
	ssl_certificate_key ssl/agent3.key;

	ssl_stapling on;
	ssl_stapling_verify on;
	ssl_trusted_certificate ssl/ca.crt;
	ssl_ecdh_curve auto;

	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
	ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        access_log /var/log/nginx/intranettest.server.com-access.log combined;
        error_log /var/log/nginx/intranettest.server.com-error.log;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

	location /nginx_status {

          stub_status on;
          access_log   off;
          allow 192.168.1.0/24;
          deny all;
        }

        location / {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://apache-backend;
        }

	location /camera1 {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://camera1/cgi-bin/CGIProxy.fcgi?cmd=snapPicture;
	}
	location /camera2 {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://camera2/cgi-bin/CGIProxy.fcgi?cmd=snapPicture;
	}
	location /camera3 {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://camera3/cgi-bin/CGIProxy.fcgi?cmd=snapPicture;
	}
	location /camera4 {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://camera4/cgi-bin/CGIProxy.fcgi?cmd=snapPicture;
	}
	location /camera5 {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://camera5/cgi-bin/CGIProxy.fcgi?cmd=snapPicture;
	}
	location /alarm/ {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://alarm/alarm/;
	}
}

server {

        listen 0.0.0.0:443 ssl http2;
        server_name finder.server.com;

	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
	ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        access_log /var/log/nginx/finder.server.com-access.log combined;
        error_log /var/log/nginx/finder.server.com-error.log;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;


	location ~ / {
		proxy_pass http://k8s;
	}
	ssl_certificate ssl/agent1.crt;
	ssl_certificate_key ssl/agent1.key;

	ssl_stapling on;
	ssl_stapling_verify on;
	ssl_trusted_certificate ssl/ca.crt;	

}

server {
        listen 0.0.0.0:443 ssl http2;
        server_name webmailtest.server.com;
        ssl_certificate ssl/agent1.crt;
        ssl_certificate_key ssl/agent1.key;

        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate ssl/ca.crt;	

	    ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        access_log /var/log/nginx/webmailtest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;

        proxy_set_header Host roundcube.k8stest.server.com;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
                proxy_pass http://k8s;
        }

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
}

server {
        listen 0.0.0.0:80;
        server_name admin.server.com;

        access_log /var/log/nginx/admin.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://apache-backend;
        }

    listen 443 ssl http2;
	ssl_certificate ssl/agent2.crt;
	ssl_certificate_key ssl/agent2.key;

	ssl_stapling on;
	ssl_stapling_verify on;
	ssl_trusted_certificate ssl/ca.crt;	

	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }

}

server {
        server_name postfixadmintest.server.com;

        access_log /var/log/nginx/postfixadmintest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://apache-backend;
        }

    listen 443 ssl http2;
#ssl_certificate /etc/letsencrypt/live/admin.server.com/fullchain.pem;
#ssl_certificate_key /etc/letsencrypt/live/admin.server.com/privkey.pem;

	ssl_stapling on;
	ssl_stapling_verify on;
	ssl_trusted_certificate ssl/ca.crt;

	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }

	ssl_certificate ssl/agent3.crt;
	ssl_certificate_key ssl/agent3.key;
}

server {
        server_name hometest.server.com;

        access_log /var/log/nginx/hometest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        #proxy_set_header Host openhab.k8stest.server.com;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	proxy_set_header X-Forwarded-Proto "https";
	proxy_set_header X-Forwarded-Port 443;

        location / {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;
                proxy_pass http://k8s;
        }

    listen 443 ssl http2;

	ssl_stapling on;
	ssl_stapling_verify on;

	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
	ssl_certificate ssl/agent1.crt;
	ssl_certificate_key ssl/agent1.key;
}

server {
        server_name piholetest.server.com;

        access_log /var/log/nginx/hometest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	proxy_set_header X-Forwarded-Proto "https";
	proxy_set_header X-Forwarded-Port 443;

        location / {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;
                proxy_pass http://k8s;
        }

    listen 443 ssl http2;

	ssl_stapling on;
	ssl_stapling_verify on;

	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }


	ssl_certificate ssl/agent2.crt;
	ssl_certificate_key ssl/agent2.key;
}

server {
	listen 0.0.0.0:80;
	server_name webmailtest.server.com intranettest.server.com;

	location / {
		rewrite (.*)$ https://$host$1 last;
	}
}

server {
        listen 0.0.0.0:80;
        server_name grafanatest.server.com;

        access_log /var/log/nginx/grafanatest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {


                proxy_pass http://k8s;
        }

    listen 443 ssl http2;
	ssl_certificate ssl/agent3.crt;
	ssl_certificate_key ssl/agent3.key;
    
#    include /etc/letsencrypt/options-ssl-nginx.conf;
	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate ssl/ca.crt;

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }

}

server {
        listen 0.0.0.0:80;
        server_name registrytest.server.com;

        access_log /var/log/nginx/registrytest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host registry.k8stest.server.com;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
          allow 192.168.1.0/24;
          allow 10.0.0.0/8;
          deny all;

          proxy_pass http://k8s-registry;
        }

    listen 443 ssl http2;
#    include /etc/letsencrypt/options-ssl-nginx.conf;
	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        ssl_stapling on;
        ssl_stapling_verify on;

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
	ssl_certificate ssl/agent1.crt;
	ssl_certificate_key ssl/agent1.key;
}

server {
        listen 0.0.0.0:80;
        server_name k8s-dashboardtest.server.com;

        access_log /var/log/nginx/k8s-dashboardtest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host dashboard.k8stest.server.com;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
          allow 192.168.1.0/24;
          allow 10.0.0.0/8;
          deny all;

          proxy_pass https://k8s-dashboard;
        }

    listen 443 ssl http2;
#    include /etc/letsencrypt/options-ssl-nginx.conf;
	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        ssl_stapling on;
        ssl_stapling_verify on;

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }

	ssl_certificate ssl/agent2.crt;
	ssl_certificate_key ssl/agent2.key;
}

server {
        listen 0.0.0.0:80;
        server_name prometheustest.server.com;

        access_log /var/log/nginx/prometheustest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host prometheus.k8stest.server.com;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://k8s;
        }

    listen 443 ssl http2;
	ssl_certificate ssl/agent3.crt;
	ssl_certificate_key ssl/agent3.key;
	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate ssl/ca.crt;

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }

}

server {
        server_name octoprinttest.server.com;

        access_log /var/log/nginx/octoprinttest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
                auth_basic            "intranet";
                auth_basic_user_file  /etc/apache2/htpasswd;

                proxy_pass http://rpi-octoprint;

		allow 192.168.1.0/24;
		deny all;
        }

    listen 443 ssl http2;
	ssl_certificate ssl/agent1.crt;
	ssl_certificate_key ssl/agent1.key;
    #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
	ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
	ssl_prefer_server_ciphers on;
	add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        ssl_stapling on;
        ssl_stapling_verify on;
	    ssl_trusted_certificate ssl/ca.crt;

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
}

server {
	listen 0.0.0.0:80;
	server_name mailtest.server.com;

        location ~ /(.*)$ {
                rewrite ^ http://wwwtest.server.com permanent;
        }

    listen 443 ssl http2;
	ssl_certificate ssl/agent2.crt;
	ssl_certificate_key ssl/agent2.key;
#    include /etc/letsencrypt/options-ssl-nginx.conf;

        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate ssl/ca.crt;

        ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

    # Redirect non-https traffic to https
    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
}

server {
        server_name wikitest.server.com;

        access_log /var/log/nginx/wikitest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	proxy_set_header X-Forwarded-Proto "https";
	proxy_set_header X-Forwarded-Port 443;

        location / {

                proxy_pass http://k8s;
        }

    listen 443 ssl http2;
    #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
	ssl_prefer_server_ciphers on;
	add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        ssl_stapling on;
        ssl_stapling_verify on;
	    ssl_trusted_certificate ssl/ca.crt;

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
	ssl_certificate ssl/agent3.crt;
	ssl_certificate_key ssl/agent3.key;
}

server {
        server_name homewikitest.server.com;

        access_log /var/log/nginx/homewikitest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
#        proxy_set_header Host homewiki.k8stest.server.com;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {

                proxy_pass http://k8s;
        }

    listen 443 ssl http2;
    #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
	ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
	ssl_prefer_server_ciphers on;
	add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate ssl/ca.crt;

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
	ssl_certificate ssl/agent1.crt;
	ssl_certificate_key ssl/agent1.key;
}

server {
        server_name p2ptest.server.com;
        access_log /var/log/nginx/p2p-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
                proxy_pass http://k8s;
        }

    listen 443 ssl http2;
	ssl_certificate ssl/agent2.crt;
	ssl_certificate_key ssl/agent2.key;

#    include /etc/letsencrypt/options-ssl-nginx.conf;
	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate ssl/ca.crt;

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
}

server {
        listen 0.0.0.0:80;
        server_name webmail.test.server.com;

        listen 0.0.0.0:443 ssl http2;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";
        ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;

	    ssl_protocols TLSv1.2 TLSv1.3;
        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate ssl/ca.crt;

        access_log /var/log/nginx/webmail.test.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;

        proxy_set_header Host roundcube.k8stest.server.com;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
                proxy_pass http://k8s;
        }

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }


	ssl_certificate ssl/agent3.crt;
	ssl_certificate_key ssl/agent3.key;
}

server {
        listen 0.0.0.0:80;
        server_name old-ways.test.server.com;

        listen 0.0.0.0:443 ssl http2;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;

	ssl_protocols TLSv1.2 TLSv1.3;
        ssl_stapling on;
        ssl_stapling_verify on;

        access_log /var/log/nginx/old-ways.test.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
                proxy_pass http://apache-backend;
        }

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
	ssl_certificate ssl/agent3.crt;
	ssl_certificate_key ssl/agent3.key;

}

server {
        listen 0.0.0.0:80;
        server_name mail.test.server.com;

        location ~ /(.*)$ {
                rewrite ^ http://test.server.com permanent;
        }

    listen 443 ssl http2;
    #include /etc/letsencrypt/options-ssl-nginx.conf;
    #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

    # Redirect non-https traffic to https
    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }

	ssl_certificate ssl/agent1.crt;
	ssl_certificate_key ssl/agent1.key;
}
server {
        server_name something.test.server.com;

        access_log /var/log/nginx/something.test.server.com-access.log combined;

        client_max_body_size 400m;
        client_body_timeout 3600;
        send_timeout 180;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        #Only cache 200 responses, and for a default of 20 minutes.
        proxy_cache_valid 200 20m;

        location / {
          allow 192.168.1.0/24;
          deny all;

                        # If logged in, don't cache.
                        if ($http_cookie ~* "comment_author_|wordpress_(?!test_cookie)|wp-postpass_" ) {
                                set $do_not_cache 1;
                        }

                        proxy_pass http://apache-backend;
        }

        location ~* wp\-login\.php {
          allow 192.168.1.0/24;
          deny all;

               proxy_pass http://apache-backend;
        }

        location ~* wp\-.*\.php|wp\-admin {
          allow 192.168.1.0/24;
          deny all;

                        # Don't static file cache admin-looking things.
                        proxy_pass http://apache-backend;
        }

        location ~* \.(jpg|png|gif|jpeg|js|mp3|wav|swf|mov|doc|pdf|xls|ppt|docx|pptx|xlsx)$ {
          allow 192.168.1.0/24;
          deny all;

                        proxy_pass http://apache-backend;

        }

        location = /50x.html {
          allow 192.168.1.0/24;
          deny all;

        }

        # No access to .htaccess files.
        location ~ /\.ht {
                deny all;
        }

#############################

    listen 443 ssl http2;
	ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
	ssl_prefer_server_ciphers on;
    add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";
    #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

   if ($scheme != "https") {
       return 301 https://$host$request_uri;
    }

	ssl_certificate ssl/agent2.crt;
	ssl_certificate_key ssl/agent2.key;
}

server {
        listen 0.0.0.0:80;
        server_name test.server.com;

        access_log /var/log/nginx/test.server.com-access.log combined;

        client_max_body_size 16m;
        client_body_timeout 3600;
        send_timeout 180;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        #Only cache 200 responses, and for a default of 20 minutes.
        proxy_cache_valid 200 20m;

        location / {
                        # If logged in, don't cache.
                        if ($http_cookie ~* "comment_author_|wordpress_(?!test_cookie)|wp-postpass_" ) {
                                set $do_not_cache 1;
                        }
                        proxy_cache_key "$scheme://$host$request_uri $do_not_cache";
                        proxy_cache staticfilecache;
                        proxy_pass http://apache-backend;
        }

        location ~* wp\-login\.php {
               proxy_pass http://apache-backend;
        }

        location ~* wp\-.*\.php|wp\-admin {
                        # Don't static file cache admin-looking things.
                        proxy_pass http://apache-backend;
        }

        location ~* \.(jpg|png|gif|jpeg|js|mp3|wav|swf|mov|doc|pdf|xls|ppt|docx|pptx|xlsx)$ {
                        # Cache static-looking files for 120 minutes, setting a 10 day expiry time in the HTTP header,
                        # whether logged in or not (may be too heavy-handed).
                        proxy_cache_valid 200 120m;
                        expires 864000;
                        proxy_pass http://apache-backend;
                        proxy_cache staticfilecache;
        }


        location = /50x.html {
        }

        # No access to .htaccess files.
        location ~ /\.ht {
                deny all;
        }

#############################

    listen 443 ssl http2;
#    include /etc/letsencrypt/options-ssl-nginx.conf;
	ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
	ssl_prefer_server_ciphers on;
    add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";
    #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
#    add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

#    if ($scheme != "https") {
#        return 301 https://$host$request_uri;
#    }
	ssl_certificate ssl/agent1.crt;
	ssl_certificate_key ssl/agent1.key;
}

server {
        server_name www.test.server.com;

	location / {
	    rewrite ^/(.*) $scheme://test.server.com/$1 permanent;
	}

    listen 443 ssl http2;
	ssl_certificate ssl/agent2.crt;
	ssl_certificate_key ssl/agent2.key;
    #include /etc/letsencrypt/options-ssl-nginx.conf;
    #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

}

server {
    if ($host = www.test.server.com) {
        return 301 https://$host$request_uri;
    }


        listen 0.0.0.0:80;
        server_name www.test.server.com;
    return 404;
}

server {
    if ($host = postfixadmintest.server.com) {
        return 301 https://$host$request_uri;
    }


        listen 0.0.0.0:80;
        server_name postfixadmintest.server.com;
    return 404;
}

server {
        server_name ssotest.server.com;

        access_log /var/log/nginx/ssotest.server.com-access.log combined;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	proxy_set_header X-Forwarded-Proto https;
	proxy_set_header X-Forwarded-Port 443;

	error_page   403  /error403.html;
	location = /error403.html {
		return 200 '';
	}

        location ~ /auth/admin {
          allow 192.168.1.0/24;
          allow 10.0.0.0/8;
          deny all;
          proxy_pass http://k8s;
        }

        location / {
          proxy_pass http://k8s;
        }

    listen 443 ssl http2;

	ssl_stapling on;
	ssl_stapling_verify on;

	ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:!ECDHE-RSA-AES256-SHA:!ECDHE-RSA-AES256-SHA384:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }

	ssl_certificate ssl/agent3.crt;
	ssl_certificate_key ssl/agent3.key;
}



server {
    if ($host = finder.server.com) {
        return 301 https://$host$request_uri;
    }


        listen 0.0.0.0:80;
        server_name finder.server.com;
    return 404;


}}
