receivers:
  hostmetrics:
    collection_interval: 1m0s
    initial_delay: 1s
    scrapers:
      cpu:
        metrics:
          system.cpu.utilization:
            enabled: true
          system.cpu.logical.count:
            enabled: true
      disk:
      filesystem:
      memory:
      network:
  otlp/0:
    protocols:
      grpc:
        endpoint: "localhost:4317"
        tls:
          cert_file: /tmp/cert.pem
          key_file: /tmp/key.pem
          ca_file: /tmp/ca.pem
  nginx/123:
    api_details:
      url: "http://localhost:80/status"
      listen: ""
      location: ""
    collection_interval: 10s
    access_logs:
      - log_format: "$remote_addr - $remote_user [$time_local] \"$request\" $status $body_bytes_sent \"$http_referer\" \"$http_user_agent\" \"$http_x_forwarded_for\"\"$upstream_cache_status\""
        file_path: "/var/log/nginx/access-custom.conf"
  tcplog/0:
    listen_address: "localhost:151"
    operators:
      - type: add
        field: body
        value: EXPR(split(body, ",")[0])
      - type: remove
        field: attributes.message

processors:
  resource:
    attributes:
      - key: resource.id
        action: add
        value: 12345
  batch:
    send_batch_size: 8192
    timeout: 200ms
    send_batch_max_size: 0

exporters:
  otlp/0:
    endpoint: "127.0.0.1:1234"
    compression: none
    timeout: 10s
    retry_on_failure:
      enabled: true
      initial_interval: 10s
      max_interval: 60s
      max_elapsed_time: 10m
    tls:
      insecure: true
    auth:
      authenticator: headers_setter
  prometheus:
    endpoint: "localhost:9876"
    resource_to_telemetry_conversion:
      enabled: true
  debug:
    verbosity: detailed
    sampling_initial: 5
    sampling_thereafter: 200
extensions:
  health_check:
    endpoint: "127.0.0.1:1337"
  headers_setter:
    headers:
      - action: "insert"
        key: "authorization"
        value: "key1"
      - action: "upsert"
        key: "uuid"
        value: "1234"

service:
  telemetry:
    logs:
      level: INFO
      output_paths: ["/var/log/nginx-agent/opentelemetry-collector-agent.log"]
      error_output_paths: ["/var/log/nginx-agent/opentelemetry-collector-agent.log"]
  extensions:
    - health_check
    - headers_setter
  pipelines:
    metrics:
      receivers:
        - hostmetrics
        - otlp/0
        - nginx/123
      processors:
        - resource
        - batch
      exporters:
        - otlp/0
        - prometheus
        - debug
    logs:
      receivers:
        - tcplog/0
      processors:
        - resource
        - batch
      exporters:
        - otlp/0
        - debug
